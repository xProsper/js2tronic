{"version":3,"sources":["class/Entity.ts","class/Block.ts","class/Tronic.ts","class/Monster.ts","class/Item.ts","class/Js2tronic.ts","enum/Stuffable.ts","enum/CartridgeVariant.ts","enum/DesertVariant.ts","enum/DirtVariant.ts","enum/MoonVariant.ts","enum/OneWayVariant.ts","enum/RobotVariant.ts","enum/SaurusVariant.ts","enum/ShipVariant.ts","enum/RotationAngle.ts","enum/GravityState.ts","index.ts","../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","window","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.77de5100.js","sourceRoot":"..\\src","sourcesContent":["class Position {\r\n    x: string | number;\r\n    y: string | number;\r\n    z: string | number;\r\n    d: string | number;\r\n\r\n    constructor () {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0; // one of 000, 100, 200\r\n        this.d = 0; // one of 0, 90, 180, 270\r\n    }\r\n}\r\n\r\nclass Troniccon {\r\n    fa?: string | number;\r\n    fb?: string | number;\r\n    da?: string | number;\r\n    db?: string | number;\r\n    do?: string | number;\r\n    dz?: string | number;\r\n}\r\n\r\nexport class Tronicnum {\r\n    set(x: string | number, y: string | number, z: string | number) { \r\n        if (Number(x) === 0 && Number(y) === 0 && Number(z) === 0) {\r\n            return String(0); // 0\r\n        }\r\n        if (Number(z) === 0) {\r\n            var zeroPad = (\"000\" + String(y));\r\n            y = zeroPad.substring(zeroPad.length - 3);\r\n            return String(x) + String(y); // xxx0yy\r\n        }\r\n        return String(x) + String(Number(y) + Number(z)); // xxxzyy\r\n    }\r\n}\r\n\r\nexport class Entity {\r\n    // Common\r\n    name: string;\r\n    position: Position;\r\n    tronictype?: string;\r\n    pushed?: boolean;\r\n    group?: string | number;\r\n    contain?: string;\r\n    comment?: string;\r\n    text?: string;\r\n    grav?: string | number; // 0 <fixed> | 1 <float> | 2 <fall>\r\n    dir?: string | number; // -1 <counterclockwise> | 1 <clockwise>\r\n    load?: string;\r\n    tronicnum?: string | number; // when used : new Tronicnum(this.position.x, this.position.y, this.position.z)\r\n\r\n    // Block specific\r\n    door?: string | number;\r\n    pipe?: string | number;\r\n    warp?: string;\r\n\r\n    // Tronic specific\r\n    troniccon?: Troniccon;\r\n    calc?: string | number; // undefined <plus> | 1 <minus> | 2 <multiply> | 3 <divide> | 4 <combine> | 5 <modulo> | 6 <exponential> | 7 <percentage>\r\n    if?: string; // \">\" | \"=\"\r\n    bang?: string; // TronicTwitch set bang command\r\n\r\n    constructor () {\r\n        this.name = this.constructor.name;\r\n        this.position = new Position;\r\n    }\r\n\r\n    // TODO Add method to change position\r\n}","import { Entity } from \"./Entity\";\r\nimport { Tronicnum } from \"./Entity\";\r\n\r\nexport class Block {\r\n    BrickBlue() : BrickBlue { return new BrickBlue(); };\r\n    BrickGlow() : BrickGlow { return new BrickGlow(); };\r\n    BrickGreen() : BrickGreen { return new BrickGreen(); };\r\n    BrickOld() : BrickOld { return new BrickOld(); };\r\n    BrickRed() : BrickRed { return new BrickRed(); };\r\n    VirtualBrick() : VirtualBrick { return new VirtualBrick(); };\r\n    Cartridge() : Cartridge { return new Cartridge(); };\r\n    Desert() : Desert { return new Desert(); };\r\n    Dirt() : Dirt { return new Dirt(); };\r\n    Moon() : Moon { return new Moon(); };\r\n    OneWay() : OneWay { return new OneWay(); };\r\n    Robot() : Robot { return new Robot(); };\r\n    Saurus() : Saurus { return new Saurus(); };\r\n    Ship() : Ship { return new Ship(); };\r\n    BounceBlock() : BounceBlock { return new BounceBlock(); };\r\n    ExplosiveBlock() : ExplosiveBlock { return new ExplosiveBlock(); };\r\n    Eye() : Eye { return new Eye(); };\r\n    FallBlock() : FallBlock { return new FallBlock(); };\r\n    FertBox() : FertBox { return new FertBox(); };\r\n    GravityBlock() : GravityBlock { return new GravityBlock(); };\r\n    IceBlock() : IceBlock { return new IceBlock(); };\r\n    InvisableBlock() : InvisableBlock { return new InvisableBlock(); };\r\n    KaizoBlock() : KaizoBlock { return new KaizoBlock(); };\r\n    MetalBlock() : MetalBlock { return new MetalBlock(); };\r\n    QuestionBlock() : QuestionBlock { return new QuestionBlock(); };\r\n    FloatBlock() : FloatBlock { return new FloatBlock(); };\r\n    SpringBlock() : SpringBlock { return new SpringBlock(); };\r\n    Chain() : Chain { return new Chain(); };\r\n    ChainBend() : ChainBend { return new ChainBend(); };\r\n    Door() : Door { return new Door(); };\r\n    EndDoor() : EndDoor { return new EndDoor(); };\r\n    WarpDoor() : WarpDoor { return new WarpDoor(); };\r\n    LavaSquare() : LavaSquare { return new LavaSquare(); };\r\n    Water() : Water { return new Water(); };\r\n    Bushes() : Bushes { return new Bushes(); };\r\n    Cloud() : Cloud { return new Cloud(); };\r\n    Construction() : Construction { return new Construction(); };\r\n    LightBulb() : LightBulb { return new LightBulb(); };\r\n    RampLeft() : RampLeft { return new RampLeft(); };\r\n    RampRight() : RampRight { return new RampRight(); };\r\n    RobotJoint() : RobotJoint { return new RobotJoint(); };\r\n    Sign() : Sign { return new Sign(); };\r\n    Spikes() : Spikes { return new Spikes(); };\r\n    Wheel() : Wheel { return new Wheel(); };\r\n    PipeCurve() : PipeCurve { return new PipeCurve(); };\r\n    PipeExtension() : PipeExtension { return new PipeExtension(); };\r\n    PipeSteam() : PipeSteam { return new PipeSteam(); };\r\n    PipeTop() : PipeTop { return new PipeTop(); };\r\n    PipeWater() : PipeWater { return new PipeWater(); };\r\n    TravelPipe() : TravelPipe { return new TravelPipe(); };\r\n    Treadmill() : Treadmill { return new Treadmill(); };\r\n    TreadmillRight() : TreadmillRight { return new TreadmillRight(); };\r\n}\r\n\r\nclass BrickBlue extends Entity {\r\n    pushToBackground(): BrickBlue { this.pushed = true; return this; }\r\n    groupTo( tronicnum: string | number ): BrickBlue { this.group = tronicnum; return this; }\r\n    stuffWith( stuffable: string ): BrickBlue { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass BrickGlow extends Entity {\r\n    groupTo( tronicnum: string | number ): BrickGlow { this.group = tronicnum; return this; }\r\n    stuffWith( stuffable: string ): BrickGlow { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass BrickGreen extends Entity {\r\n    pushToBackground(): BrickGreen { this.pushed = true; return this; }\r\n    groupTo( tronicnum: string | number ): BrickGreen { this.group = tronicnum; return this; }\r\n    stuffWith( stuffable: string ): BrickGreen { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass BrickOld extends Entity {\r\n    pushToBackground(): BrickOld { this.pushed = true; return this; }\r\n    groupTo( tronicnum: string | number ): BrickOld { this.group = tronicnum; return this; }\r\n    stuffWith( stuffable: string ): BrickOld { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass BrickRed extends Entity {\r\n    pushToBackground(): BrickRed { this.pushed = true; return this; }\r\n    groupTo( tronicnum: string | number ): BrickRed { this.group = tronicnum; return this; }\r\n    stuffWith( stuffable: string ): BrickRed { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass VirtualBrick extends Entity {\r\n    groupTo( tronicnum: string | number ): VirtualBrick { this.group = tronicnum; return this; }\r\n}\r\n\r\nclass Cartridge extends Entity {\r\n    pushToBackground(): Cartridge { this.pushed = true; return this; }\r\n    groupTo( tronicnum: string | number ): Cartridge { this.group = tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Cartridge { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass Desert extends Entity {\r\n    pushToBackground(): Desert { this.pushed = true; return this; }\r\n    groupTo( tronicnum: string | number ): Desert { this.group = tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Desert { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass Dirt extends Entity {\r\n    pushToBackground(): Dirt { this.pushed = true; return this; }\r\n    groupTo( tronicnum: string | number ): Dirt { this.group = tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Dirt { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass Moon extends Entity {\r\n    pushToBackground(): Moon { this.pushed = true; return this; }\r\n    groupTo( tronicnum: string | number ): Moon { this.group = tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Moon { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass OneWay extends Entity {\r\n    pushToBackground(): OneWay { this.pushed = true; return this; }\r\n    spriteVariant( spriteVariant?: string ): OneWay { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass Robot extends Entity {\r\n    pushToBackground(): Robot { this.pushed = true; return this; }\r\n    groupTo( tronicnum: string | number ): Robot { this.group = tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Robot { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass Saurus extends Entity {\r\n    pushToBackground(): Saurus { this.pushed = true; return this; }\r\n    groupTo( tronicnum: string | number ): Saurus { this.group = tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Saurus { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass Ship extends Entity {\r\n    pushToBackground(): Ship { this.pushed = true; return this; }\r\n    groupTo( tronicnum: string | number ): Ship { this.group = tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Ship { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass BounceBlock extends Entity {\r\n    groupTo( tronicnum: string | number ): BounceBlock { this.group = tronicnum; return this; }\r\n}\r\n\r\nclass ExplosiveBlock extends Entity {\r\n    pushToBackground(): ExplosiveBlock { this.pushed = true; return this; }\r\n    groupTo( tronicnum: string | number ): ExplosiveBlock { this.group = tronicnum; return this; }\r\n    stuffWith( stuffable: string ): ExplosiveBlock { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass Eye extends Entity {\r\n    groupTo( tronicnum: string | number ): Eye { this.group = tronicnum; return this; }\r\n}\r\n\r\nclass FallBlock extends Entity {\r\n    // No methods\r\n}\r\n\r\nclass FertBox extends Entity {\r\n    rotateTo( angle: string | number ): FertBox { this.position.d = angle; return this; }\r\n    groupTo( tronicnum: string | number ): FertBox { this.group = tronicnum; return this; }\r\n    stuffWith( stuffable: string ): FertBox { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass GravityBlock extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.grav = \"2\"; // This cannot be toggled to FIXED or FLOAT, only FALL\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): GravityBlock { this.pushed = true; return this; }\r\n    label( label: string ): GravityBlock { this.comment = label; return this; }\r\n}\r\n\r\nclass IceBlock extends Entity {\r\n    groupTo( tronicnum: string | number ): IceBlock { this.group = tronicnum; return this; }\r\n    stuffWith( stuffable: string ): IceBlock { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass InvisableBlock extends Entity {\r\n    rotateTo( angle: string | number ): InvisableBlock { this.position.d = angle; return this; }\r\n    groupTo( tronicnum: string | number ): InvisableBlock { this.group = tronicnum; return this; }\r\n    stuffWith( stuffable: string ): InvisableBlock { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass KaizoBlock extends Entity {\r\n    rotateTo( angle: string | number ): KaizoBlock { this.position.d = angle; return this; }\r\n    groupTo( tronicnum: string | number ): KaizoBlock { this.group = tronicnum; return this; }\r\n    stuffWith( stuffable: string ): KaizoBlock { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass MetalBlock extends Entity {\r\n    groupTo( tronicnum: string | number ): MetalBlock { this.group = tronicnum; return this; }\r\n}\r\n\r\nclass QuestionBlock extends Entity {\r\n    rotateTo( angle: string | number ): QuestionBlock { this.position.d = angle; return this; }\r\n    groupTo( tronicnum: string | number ): QuestionBlock { this.group = tronicnum; return this; }\r\n    stuffWith( stuffable: string ): QuestionBlock { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass FloatBlock extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    rotateTo( angle: string | number ): FloatBlock { this.position.d = angle; return this; }\r\n}\r\n\r\nclass SpringBlock extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    rotateTo( angle: string | number ): SpringBlock { this.position.d = angle; return this; }\r\n}\r\n\r\nclass Chain extends Entity {\r\n    pushToBackground(): Chain { this.pushed = true; return this; }\r\n    rotateTo( angle: string | number ): Chain { this.position.d = angle; return this; }\r\n}\r\n\r\nclass ChainBend extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.name = \"Chain Bend\"; // exceptionally has a space in name, therefore the constructor.name is not used here\r\n    }\r\n    pushToBackground(): ChainBend { this.pushed = true; return this; }\r\n    rotateTo( angle: string | number ): ChainBend { this.position.d = angle; return this; }\r\n}\r\n\r\n// TODO Must make 2 doors and have their tronicnum refer each other\r\nclass Door extends Entity {\r\n    destinationDoor( tronicnum: string | number ): Door { this.door = tronicnum; return this; }\r\n    groupTo( tronicnum: string | number ): Door { this.group = tronicnum; return this; }\r\n    label( label: string ): Door { this.comment = label; return this; }\r\n}\r\n\r\nclass EndDoor extends Entity {\r\n    groupTo( tronicnum: string | number ): EndDoor { this.group = tronicnum; return this; }\r\n    label( label: string ): EndDoor { this.comment = label; return this; }\r\n}\r\n\r\nclass WarpDoor extends Entity {\r\n    groupTo( tronicnum: string | number ): WarpDoor { this.group = tronicnum; return this; }\r\n    label( label: string ): WarpDoor { this.comment = label; return this; }\r\n    warpTo( level: string ): WarpDoor { this.warp = level; return this; }\r\n}\r\n\r\nclass LavaSquare extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.load = \"t\"; // Lava always spawn with a load option of \"t\" (for transparent ?)\r\n    }\r\n    groupTo( tronicnum: string | number ): LavaSquare { this.group = tronicnum; return this; }\r\n}\r\n\r\nclass Water extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.load = \"t\"; // Water always spawn with a load option of \"t\" (for transparent ?)\r\n    }\r\n    groupTo( tronicnum: string | number ): Water { this.group = tronicnum; return this; }\r\n}\r\n\r\n// Takes up 1x4 area. Coords represent its base, therefore it occupies 3 more squares in the direction of its rotation.\r\nclass Bushes extends Entity {\r\n    rotateTo( angle: string | number ): Bushes { this.position.d = angle; return this; }\r\n    groupTo( tronicnum: string | number ): Bushes { this.group = tronicnum; return this; }\r\n}\r\n\r\n// Takes up 4x1 area, Coords represent the 3rd block from the left, therefore it occupies 2 squares left and 1 square right of where it is placed\r\n// Even if it can be rotated, it stays in the same shape, therefore I do not include a parameter to affect rotation.\r\nclass Cloud extends Entity {\r\n    \r\n}\r\n\r\nclass Construction extends Entity {\r\n    pushToBackground(): Construction { this.pushed = true; return this; }\r\n    rotateTo( angle: string | number ): Construction { this.position.d = angle; return this; }\r\n    groupTo( tronicnum: string | number ): Construction { this.group = tronicnum; return this; }\r\n}\r\n\r\nclass LightBulb extends Entity {\r\n    pushToBackground(): LightBulb { this.pushed = true; return this; }\r\n    rotateTo( angle: string | number ): LightBulb { this.position.d = angle; return this; }\r\n    groupTo( tronicnum: string | number ): LightBulb { this.group = tronicnum; return this; }\r\n}\r\n\r\n// when placed it occupies a 1x2 area. Coords represent the left-most of the two squares when rotation is 0. (Yellow block, angled like a front-slash)\r\nclass RampLeft extends Entity {\r\n    rotateTo( angle: string | number ): RampLeft { this.position.d = angle; return this; }\r\n    groupTo( tronicnum: string | number ): RampLeft { this.group = tronicnum; return this; }\r\n}\r\n\r\n// when placed it occupies a 1x2 area. Coords represent the right-most of the two squares when rotation is 0. (Blue block, angled like a back-slash)\r\nclass RampRight extends Entity {\r\n    rotateTo( angle: string | number ): RampRight { this.position.d = angle; return this; }\r\n    groupTo( tronicnum: string | number ): RampRight { this.group = tronicnum; return this; }\r\n}\r\n\r\n// when placed it occupies a 1x2 area. Coords represent the right-most of the two squares when rotation is 0.\r\n\t\t// The left-most square can be overlayed on top of a pinball flipper's pointy side to create an articulate joint (when in 2 seperate block groups).\r\nclass RobotJoint extends Entity {\r\n    rotateTo( angle: string | number ): RobotJoint { this.position.d = angle; return this; }\r\n    groupTo( tronicnum: string | number ): RobotJoint { this.group = tronicnum; return this; }\r\n}\r\n\r\nclass Sign extends Entity {\r\n    rotateTo( angle: string | number ): Sign { this.position.d = angle; return this; }\r\n    groupTo( tronicnum: string | number ): Sign { this.group = tronicnum; return this; }\r\n    label( label: string ): Sign { this.comment = label; return this; }\r\n    message( message: string ): Sign { this.text = message; return this; }\r\n}\r\n\r\nclass Spikes extends Entity {\r\n    rotateTo( angle: string | number ): Spikes { this.position.d = angle; return this; }\r\n    groupTo( tronicnum: string | number ): Spikes { this.group = tronicnum; return this; }\r\n}\r\n\r\nclass Wheel extends Entity {\r\n    groupTo( tronicnum: string | number ): Wheel { this.group = tronicnum; return this; }\r\n}\r\n\r\n// takes 2x2 area. Coords represent the top left corner. rotation 0 (bottom-left corner) rotation 90 (bottom-right corner) rotation 180 (top-right corner) rotation 270 (top-left corner)\r\nclass PipeCurve extends Entity {\r\n    rotateTo( angle: string | number ): PipeCurve { this.position.d = angle; return this; }\r\n    groupTo( tronicnum: string | number ): PipeCurve { this.group = tronicnum; return this; }\r\n}\r\n\r\n// takes 2x2 area. Coords represent the top left corner when rotation 0. The other blocks rotate around this one. rotation 90 (bottom left) 180 (bottom right) 270 (top right)\r\nclass PipeExtension extends Entity {\r\n    rotateTo( angle: string | number ): PipeExtension { this.position.d = angle; return this; }\r\n    groupTo( tronicnum: string | number ): PipeExtension { this.group = tronicnum; return this; }\r\n}\r\n\r\n// takes 2x2 area. Coords represent the bottom left corner when rotation 0 steam goes up. The other blocks rotate around this one. rotation 90 (bottom right) 180 (top right) 270 (bottom left)\r\nclass PipeSteam extends Entity {\r\n    rotateTo( angle: string | number ): PipeSteam { this.position.d = angle; return this; }\r\n    groupTo( tronicnum: string | number ): PipeSteam { this.group = tronicnum; return this; }\r\n}\r\n\r\nclass PipeTop extends Entity {\r\n\r\n}\r\n\r\nclass PipeWater extends Entity {\r\n\r\n}\r\n\r\nclass TravelPipe extends Entity {\r\n\r\n}\r\n\r\nclass Treadmill extends Entity {\r\n\r\n}\r\n\r\nclass TreadmillRight extends Entity {\r\n\r\n}","import { Entity } from \"./Entity\";\r\n\r\nexport class Tronic extends Entity {\r\n    \r\n}","import { Entity } from \"./Entity\";\r\n\r\nexport class Monster extends Entity {\r\n    \r\n}","import { Entity } from \"./Entity\";\r\n\r\nexport class Item extends Entity {\r\n    \r\n}","import { Block } from \"./Block\";\r\nimport { Tronic } from \"./Tronic\";\r\nimport { Monster } from \"./Monster\";\r\nimport { Item } from \"./Item\";\r\n\r\nexport class Js2tronic {\r\n    readonly block: Block;\r\n    readonly tronic: Tronic;\r\n    readonly monster: Monster;\r\n    readonly item: Item;\r\n    constructor () {\r\n        this.block = new Block();\r\n        this.tronic = new Tronic();\r\n        this.monster = new Monster();\r\n        this.item = new Item();\r\n    }\r\n}","export enum Stuffable {\r\n    BLIP = \"Blip\",\r\n    BLIPBAT = \"BlipBat\",\r\n    BLIPGHOST = \"BlipGhost\",\r\n    BLIPSHADOW = \"BlipShadow\",\r\n    BOUNCINGBLIP = \"BouncingBlip\",\r\n    BRIGHTBLIP = \"BrightBlip\",\r\n    COINBLIP = \"CoinBlip\",\r\n    LAVABLIP = \"LavaBlip\",\r\n    NEKO = \"Neko\",\r\n    NEKOPILOT = \"NekoPilot\",\r\n    NEKOPOLICE = \"NekoPolice\",\r\n    NEKOPOLICECHIEF = \"NekoPoliceChief\",\r\n    PUGAXE = \"PugAxe\",\r\n    GAMEKID = \"GameKid\",\r\n    GAMEKIDBLUE = \"GameKidBlue\",\r\n    GAMEKIDRED = \"GameKidRed\",\r\n    GRUBBY = \"Grubby\",\r\n    PRAIRIEPIRANHA = \"PrairiePiranha\",\r\n    YELLOWMAN = \"YellowMan\",\r\n    PENGUIN = \"Penguin\",\r\n    MUMMY = \"Mummy\",\r\n    SKELETON = \"Skeleton\",\r\n    SKELETONKNIGHT = \"SkeletonKnight\",\r\n    SKELETONRED = \"SkeletonRed\",\r\n    FIRESNAIL = \"FireSnail\",\r\n    SNAIL = \"Snail\",\r\n    SNAILFLY = \"SnailFly\",\r\n    COIN = \"Coin\",\r\n    ONEUP = \"OneUp\",\r\n    STARSHARD = \"StarShard\",\r\n    DONUT = \"Donut\",\r\n    LIGHTBLOCK = \"LightBlock\",\r\n    ASTROICECREAM = \"AstroIcecream\",\r\n    BOMBERGET = \"BomberGet\",\r\n    BOOT = \"Boot\",\r\n    CHEESEBURGER = \"CheeseBurger\",\r\n    COOKIE = \"Cookie\",\r\n    FIREBALL = \"Fireball\",\r\n    GETHAPPY = \"GetHappy\",\r\n    HAT = \"Hat\",\r\n    SANICBURGER = \"SanicBurger\",\r\n    VIDEOGAME = \"VideoGame\",\r\n    WALKGUY = \"WalkGuy\",\r\n    WATERMELON = \"Watermelon\",\r\n    BOMB = \"Bomb\",\r\n    FIRESHELL = \"FireShell\",\r\n    SHELL = \"Shell\",\r\n    SKATEBOARD = \"Skateboard\"\r\n};","export enum CartridgeVariant {\r\n    FLOOR = \"cartridge_3\",\r\n    FILLER = \"cartridge_5\",\r\n    CEILING = \"cartridge_7\"\r\n}","export enum DesertVariant {\r\n    TOP_LEFT_CORNER = \"desert_0\",\r\n    TOP_PURPLE_BLUE = \"desert_1\",\r\n    TOP_RIGHT_CORNER = \"desert_2\",\r\n    FILLER = \"desert_3\",\r\n    TOP_GREEN = \"desert_4\",\r\n    TOP_ORANGE = \"desert_5\",\r\n    BOTTOM_LEFT_CORNER = \"desert_6\",\r\n    BOTTOM = \"desert_7\",\r\n    BOTTOM_RIGHT_CORNER = \"desert_8\"\r\n}","export enum DirtVariant {\r\n    TOP_LONG = \"ground_0\",\r\n    TOP_SHORT = \"ground_1\",\r\n    TOP_RIGHT_CORNER = \"ground_2\",\r\n    TOP_LEFT_CORNER = \"ground_3\",\r\n    FILLER = \"ground_4\",\r\n    FILLER_ONE_PATCH = \"ground_5\",\r\n    FILLER_TWO_PATCHES = \"ground_6\",\r\n    BOTTOM_LONG = \"ground_7\",\r\n    BOTTOM_SHORT = \"ground_8\"\r\n}","export enum MoonVariant {\r\n    TOP_FLAT = \"moon_0\",\r\n    TOP_BUMP = \"moon_1\",\r\n    TOP_RIGHT_CORNER = \"moon_2\",\r\n    TOP_LEFT_CORNER = \"moon_3\",\r\n    FILLER = \"moon_4\",\r\n    FILLER_SMALL_CRATER = \"moon_5\",\r\n    FILLER_BIG_CRATER = \"moon_6\",\r\n    BOTTOM_LONG = \"moon_7\",\r\n    BOTTOM_SHORT = \"moon_8\"\r\n}","export enum OneWayVariant {\r\n    TOP_LEFT_CORNER = \"platform_0\",\r\n    TOP_RIGHT_CORNER = \"platform_1\",\r\n    BOTTOM_RIGHT_CORNER = \"platform_2\",\r\n    BOTTOM_LEFT_CORNER = \"platform_3\",\r\n    TOP = \"platform_4\",\r\n    BOTTOM = \"platform_5\",\r\n    FILLER = \"platform_6\"\r\n}","export enum RobotVariant {\r\n    TOP_ACCENT = \"robotblock_0\",\r\n    TOP = \"robotblock_1\",\r\n    TOP_RIGHT_CORNER = \"robotblock_2\",\r\n    TOP_LEFT_CORNER = \"robotblock_3\",\r\n    FILLER = \"robotblock_4\",\r\n    FILLER_ACCENT = \"robotblock_5\",\r\n    BOTTOM_LEFT_CORNER = \"robotblock_6\",\r\n    BOTTOM = \"robotblock_7\",\r\n    BOTTOM_RIGHT_CORNER = \"robotblock_8\"\r\n}","export enum SaurusVariant {\r\n    TOP_LEFT_CORNER = \"Saurus_0\",\r\n    TOP = \"Saurus_1\",\r\n    TOP_RIGHT_CORNER = \"Saurus_2\",\r\n    FILLER_THREE_SCALES = \"Saurus_3\",\r\n    FILLER_ONE_SCALE = \"Saurus_4\",\r\n    FILLER_TWO_SCALES = \"Saurus_5\",\r\n    BOTTOM_LEFT_CORNER = \"Saurus_6\",\r\n    BOTTOM = \"Saurus_7\",\r\n    BOTTOM_RIGHT_CORNER = \"Saurus_8\"\r\n}","export enum ShipVariant {\r\n    BOTTOM_FIN = \"airship_0\",\r\n    BOTTOM = \"airship_1\",\r\n    BOTTOM_RIGHT_CORNER = \"airship_2\",\r\n    BOTTOM_LEFT_CORNER = \"airship_3\",\r\n    FILLER_SURFACE_NOTCH = \"airship_4\",\r\n    FILLER_RIGHT_NOTCH = \"airship_5\",\r\n    PORTHOLE = \"airship_6\",\r\n    FILLER_LEFT_TOP_RIGHT_NOTCHES_VARIANT_A = \"airship_7\",\r\n    FILLER_LEFT_TOP_RIGHT_NOTCHES_VARIANT_B = \"airship_8\"\r\n}","export enum RotationAngle {\r\n    UPRIGHT = 0,\r\n    CLOCKWISE = 90,\r\n    UPSIDE_DOWN = 180,\r\n    COUNTER_CLOCKWISE = 270\r\n};","export enum GravityState {\r\n    FIXED = \"0\",\r\n    FLOAT = \"1\",\r\n    FALL = \"2\"\r\n};","import { Js2tronic } from \"./class/Js2tronic\";\r\n\r\nimport { Stuffable } from \"./enum/Stuffable\";\r\nimport { CartridgeVariant } from \"./enum/CartridgeVariant\";\r\nimport { DesertVariant } from \"./enum/DesertVariant\";\r\nimport { DirtVariant } from \"./enum/DirtVariant\";\r\nimport { MoonVariant } from \"./enum/MoonVariant\";\r\nimport { OneWayVariant } from \"./enum/OneWayVariant\";\r\nimport { RobotVariant } from \"./enum/RobotVariant\";\r\nimport { SaurusVariant } from \"./enum/SaurusVariant\";\r\nimport { ShipVariant } from \"./enum/ShipVariant\";\r\nimport { RotationAngle } from \"./enum/RotationAngle\";\r\nimport { GravityState } from \"./enum/GravityState\";\r\n\r\nconsole.log(GravityState.FALL);\r\nconst j2t: Js2tronic = new Js2tronic();\r\nconsole.log(j2t);\r\nlet test = j2t.block.BrickBlue();\r\nconsole.log(test);\r\ntest.pushToBackground().groupTo(331144).stuffWith(Stuffable.GRUBBY);\r\nconsole.log(test);\r\nlet cartrdige = j2t.block.Cartridge();\r\ncartrdige.spriteVariant(CartridgeVariant.FLOOR);\r\nconsole.log(cartrdige);\r\nlet desert = j2t.block.Desert();\r\ndesert.spriteVariant(DesertVariant.TOP_ORANGE);\r\nconsole.log(desert);\r\nlet dirt = j2t.block.Dirt();\r\ndirt.spriteVariant(DirtVariant.TOP_LONG);\r\nconsole.log(dirt);\r\nlet moon = j2t.block.Moon();\r\nmoon.spriteVariant(MoonVariant.TOP_BUMP);\r\nconsole.log(moon);\r\nlet oneWay = j2t.block.OneWay();\r\noneWay.spriteVariant(OneWayVariant.FILLER);\r\nconsole.log(oneWay);\r\nlet robot = j2t.block.Robot();\r\nrobot.spriteVariant(RobotVariant.BOTTOM_LEFT_CORNER);\r\nconsole.log(robot);\r\nlet saurus = j2t.block.Saurus();\r\nsaurus.spriteVariant(SaurusVariant.FILLER_THREE_SCALES);\r\nconsole.log(saurus);\r\nlet ship = j2t.block.Ship();\r\nship.spriteVariant(ShipVariant.FILLER_LEFT_TOP_RIGHT_NOTCHES_VARIANT_A);\r\nconsole.log(ship);\r\nlet fertbox = j2t.block.FertBox();\r\nfertbox.rotateTo(RotationAngle.UPSIDE_DOWN);\r\nconsole.log(fertbox);\r\nlet gravBlock = j2t.block.GravityBlock();\r\ngravBlock.label(\"test label\").pushToBackground();\r\nconsole.log(gravBlock);\r\nconsole.log(gravBlock.tronicnum);\r\nlet iceblock = j2t.block.IceBlock();\r\nconsole.log(iceblock);\r\niceblock.groupTo(221144).stuffWith(Stuffable.GRUBBY);\r\nconsole.log(iceblock);\r\nlet InvisableBlock = j2t.block.InvisableBlock();\r\nInvisableBlock.rotateTo(RotationAngle.COUNTER_CLOCKWISE).stuffWith(Stuffable.BOOT).groupTo(122435);\r\nconsole.log(InvisableBlock);\r\nlet KaizoBlock = j2t.block.KaizoBlock();\r\nKaizoBlock.rotateTo(RotationAngle.COUNTER_CLOCKWISE).stuffWith(Stuffable.BOOT).groupTo(122435);\r\nconsole.log(KaizoBlock);\r\nlet MetalBlock = j2t.block.MetalBlock();\r\nMetalBlock.groupTo(54123);\r\nconsole.log(MetalBlock);\r\nlet QuestionBlock = j2t.block.QuestionBlock();\r\nQuestionBlock.rotateTo(RotationAngle.COUNTER_CLOCKWISE).stuffWith(Stuffable.BOOT).groupTo(122435);\r\nconsole.log(QuestionBlock);\r\nlet FloatBlock = j2t.block.FloatBlock();\r\nFloatBlock.rotateTo(RotationAngle.COUNTER_CLOCKWISE);\r\nconsole.log(FloatBlock);\r\nlet ChainBend = j2t.block.ChainBend();\r\nChainBend.pushToBackground().rotateTo(RotationAngle.COUNTER_CLOCKWISE);\r\nconsole.log(ChainBend);\r\nlet Door = j2t.block.Door();\r\nDoor.groupTo(25566).destinationDoor(224466).label(\"test label door\");\r\nconsole.log(Door);","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}