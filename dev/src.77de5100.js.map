{"version":3,"sources":["class/Entity.ts","class/Block.ts","enum/TronicconPort.ts","class/Tronic.ts","class/Monster.ts","class/Item.ts","class/Js2tronic.ts","enum/Stuffable.ts","enum/CartridgeVariant.ts","enum/DesertVariant.ts","enum/DirtVariant.ts","enum/MoonVariant.ts","enum/OneWayVariant.ts","enum/RobotVariant.ts","enum/SaurusVariant.ts","enum/ShipVariant.ts","enum/RotationAngle.ts","enum/GravityState.ts","enum/IfOperator.ts","index.ts","../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","window","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.77de5100.js","sourceRoot":"..\\src","sourcesContent":["class Position {\r\n\r\n    /**\r\n     * 0-399 left to right horizontal axis\r\n     */\r\n    x: string | number;\r\n\r\n    /**\r\n     * 0-49 bottom to top vertical axis\r\n     */\r\n    y: string | number;\r\n\r\n    /**\r\n     * 0 <front layer> | 100 <middle layer> | 200 <back layer>\r\n     * \r\n     * enum - ZLayer\r\n     */\r\n    z: string | number;\r\n\r\n    /**\r\n     * rotation angle can be one of 0, 90, 180, 270\r\n     * \r\n     * enum - RotationAngle\r\n     */\r\n    d: string | number;\r\n\r\n    constructor () {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0; // one of 000, 100, 200\r\n        this.d = 0; // one of 0, 90, 180, 270\r\n    }\r\n}\r\n\r\nexport class Troniccon {\r\n    set( port: string, tronic: Entity, thisArg: Entity ) {\r\n        if (!thisArg.troniccon) thisArg.troniccon = {}; thisArg.troniccon = Object.assign( thisArg.troniccon, { [port]: tronic.tronicnum } );\r\n    }\r\n}\r\n\r\nexport class Tronicnum {\r\n    set( x: string | number, y: string | number, z: string | number ) { \r\n        if ( Number(x) === 0 && Number(y) === 0 && Number(z) === 0 ) {\r\n            return String(0); // 0\r\n        }\r\n        if (Number(z) === 0) {\r\n            var zeroPad = ( \"000\" + String(y) );\r\n            y = zeroPad.substring( zeroPad.length - 3 );\r\n            return String(x) + String(y); // xxx0yy\r\n        }\r\n        return String(x) + String( Number(y) + Number(z) ); // xxxzyy\r\n    }\r\n    update( axis: string, newValue: string | number, thisArg: Entity ) {\r\n        if (axis === \"x\") thisArg.position[axis] = newValue;\r\n        if (axis === \"y\") thisArg.position[axis] = newValue;\r\n        if (axis === \"z\") thisArg.position[axis] = newValue;\r\n        \r\n        if ( thisArg.tronicnum ) {\r\n            thisArg.tronicnum = this.set( thisArg.position.x, thisArg.position.y, thisArg.position.z );\r\n        }\r\n    }\r\n}\r\n\r\nexport class Entity {\r\n    // Common\r\n\r\n    /**\r\n     * name of the entity\r\n     * \r\n     * this.constructor.name is used to write this property\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * coordinates describing an entity's position in the world and rotation angle\r\n     */\r\n    position: Position;\r\n\r\n    /**\r\n     * Used to classify Tronic-like blocks that have some kind of smart function.\r\n     * It can have 2 different values:\r\n     * \r\n     * \"\"     - For regular blocks\r\n     * \r\n     * \"null\" - For smart tronic-like blocks\r\n     * \r\n     * Example : All tronics found in Js2tronic.tronic have a tronictype=\"null\"\r\n     *           As well as three exceptions in Js2tronic.block which are :\r\n     *           GravityBlock(), FloatBlock() and SpringBlock()\r\n     */\r\n    tronictype?: string;\r\n\r\n    /** \r\n     * false - (default) The block is set in the foreground of its current z layer\r\n     * \r\n     * true - The block is set in the background of its current z layer\r\n     */\r\n    pushed?: boolean;\r\n\r\n    /**\r\n     * tronicnum of the grouping block to which this block is grouped to\r\n     */\r\n    group?: string | number;\r\n\r\n    /**\r\n     * name of the stuffable entity that is being stuffed in this entity\r\n     * \r\n     * enum - Stuffable\r\n     */\r\n    contain?: string;\r\n\r\n    /**\r\n     * label that shows up when we pass the mouse over this block in the editor\r\n     */\r\n    comment?: string;\r\n\r\n    /**\r\n     * string of text contained inside this block. Most commonly used in a TronicData\r\n     */\r\n    text?: string;\r\n\r\n    /**\r\n     * can be one of 0 <fixed> | 1 <float> | 2 <fall>\r\n     * \r\n     * enum - GravityState\r\n     */\r\n    grav?: string | number;\r\n\r\n    /**\r\n     * can be one of -1 <counterclockwise> | 1 <clockwise>\r\n     * \r\n     * enum - DirectionState\r\n     */\r\n    dir?: string | number;\r\n\r\n    /**\r\n     * variant of an entity\r\n     */\r\n    load?: string;\r\n\r\n    /**\r\n     * 1 to 6 digit unique identifier derived from an entity's x, y, z coordinates\r\n     * \r\n     * x - can be 0-399\r\n     * \r\n     * y - can be 0-49\r\n     * \r\n     * z - can be 0, 100, 200\r\n     * \r\n     * the tronicnum is always calculated in this pattern : xxxzyy\r\n     * \r\n     * Example: x: 120, y:37, z:100 would be expressed 120137\r\n     */\r\n    tronicnum?: string | number;\r\n\r\n    // Block specific\r\n\r\n    /**\r\n     * tronicnum of the destination Js2tronic.block.Door()\r\n     */\r\n    door?: string | number;\r\n\r\n    /**\r\n     * tronicnum of the destination Js2tronic.block.TravelPipe()\r\n     */\r\n    pipe?: string | number;\r\n\r\n    /**\r\n     * name of the destination level to warp to\r\n     */\r\n    warp?: string;\r\n\r\n    // Tronic specific\r\n\r\n    /**\r\n     * represents all the different ports by which wires can be connected\r\n     * \r\n     * a connection occurs when the tronicnum of the destination tronic is set as the value of one of the ports\r\n     * \r\n     * enum - TronicconPort\r\n     */\r\n    troniccon?: {\r\n\r\n        /**\r\n         * (Pink/Orange wires)\r\n         * \r\n         * when there is only one flow output, \"fa\" is used by default\r\n         * \r\n         * when there are two flow outputs, \"fa\" is where flow outputs when the condition is TRUE\r\n         * \r\n         * enum - TronicconPort.FLOW_A \r\n         */\r\n        fa?: string | number;\r\n\r\n        /**\r\n         * (Pink/Orange wires)\r\n         * \r\n         * when there are two flow outputs, \"fb\" is where flow outputs when the condition is FALSE\r\n         * \r\n         * enum - TronicconPort.FLOW_B\r\n         */\r\n        fb?: string | number;\r\n\r\n        /**\r\n         * (Blue wires)\r\n         * \r\n         * data port usually connecting to a TronicData\r\n         * \r\n         * enum - TronicconPort.DATA_A\r\n         */\r\n        da?: string | number;\r\n\r\n        /**\r\n         * (Blue wires)\r\n         * \r\n         * data port usually connecting to a TronicData\r\n         * \r\n         * enum - TronicconPort.DATA_B\r\n         */\r\n        db?: string | number;\r\n\r\n        /**\r\n         * (Blue wires)\r\n         * \r\n         * data port usually connecting to a TronicData\r\n         * \r\n         * enum - TronicconPort.DATA_O\r\n         */\r\n        do?: string | number;\r\n\r\n        /**\r\n         * (Blue wires)\r\n         * \r\n         * data port usually connecting to a TronicData\r\n         * \r\n         * enum - TronicconPort.DATA_Z\r\n         */\r\n        dz?: string | number;\r\n    };\r\n\r\n    /**\r\n     * one of 0 <plus> (default when ommited) | 1 <minus> | 2 <multiply> | 3 <divide> | 4 <combine> | 5 <modulo> | 6 <exponential> | 7 <percentage>\r\n     * \r\n     * enum - CalcOperator\r\n     */\r\n    calc?: string | number;\r\n\r\n    /**\r\n     * one of \">\" (default when ommited) | \"=\"\r\n     * \r\n     * enum - IfOperator\r\n     */\r\n    if?: string;\r\n\r\n    /**\r\n     * TronicTwitch set bang command\r\n     */\r\n    bang?: string;\r\n\r\n    constructor () {\r\n        this.name = this.constructor.name;\r\n        this.position = new Position;\r\n    }\r\n\r\n    /**\r\n     * set the x coordinate of this entity\r\n     * @param xCoord - 0-399 left to right horizontal axis\r\n     */\r\n    x( xCoord: string | number ) { new Tronicnum().update( \"x\", xCoord, this ); return this; };\r\n\r\n    /**\r\n     * set the y coordinate of this entity\r\n     * @param yCoord - 0-49 bottom to top vertical axis\r\n     */\r\n    y( yCoord: string | number ) { new Tronicnum().update( \"y\", yCoord, this ); return this; };\r\n\r\n    /**\r\n     * set the z coordinate of this entity\r\n     * @param zCoord - 0 <front layer> | 100 <middle layer> | 200 <back layer>\r\n     * \r\n     * enum - ZLayer\r\n     */\r\n    z( zCoord: string | number ) { new Tronicnum().update( \"z\", zCoord, this ); return this; };\r\n}","import { Entity } from \"./Entity\";\r\nimport { Tronicnum } from \"./Entity\";\r\n\r\nexport class Block {\r\n    BrickBlue(): BrickBlue { return new BrickBlue(); };\r\n    BrickGlow(): BrickGlow { return new BrickGlow(); };\r\n    BrickGreen(): BrickGreen { return new BrickGreen(); };\r\n    BrickOld(): BrickOld { return new BrickOld(); };\r\n    BrickRed(): BrickRed { return new BrickRed(); };\r\n    VirtualBrick(): VirtualBrick { return new VirtualBrick(); };\r\n    Cartridge(): Cartridge { return new Cartridge(); };\r\n    Desert(): Desert { return new Desert(); };\r\n    Dirt(): Dirt { return new Dirt(); };\r\n    Moon(): Moon { return new Moon(); };\r\n    OneWay(): OneWay { return new OneWay(); };\r\n    Robot(): Robot { return new Robot(); };\r\n    Saurus(): Saurus { return new Saurus(); };\r\n    Ship(): Ship { return new Ship(); };\r\n    BounceBlock(): BounceBlock { return new BounceBlock(); };\r\n    ExplosiveBlock(): ExplosiveBlock { return new ExplosiveBlock(); };\r\n    Eye(): Eye { return new Eye(); };\r\n    FallBlock(): FallBlock { return new FallBlock(); };\r\n    FertBox(): FertBox { return new FertBox(); };\r\n    GravityBlock(): GravityBlock { return new GravityBlock(); };\r\n    IceBlock(): IceBlock { return new IceBlock(); };\r\n    InvisableBlock(): InvisableBlock { return new InvisableBlock(); };\r\n    KaizoBlock(): KaizoBlock { return new KaizoBlock(); };\r\n    MetalBlock(): MetalBlock { return new MetalBlock(); };\r\n    QuestionBlock(): QuestionBlock { return new QuestionBlock(); };\r\n    FloatBlock(): FloatBlock { return new FloatBlock(); };\r\n    SpringBlock(): SpringBlock { return new SpringBlock(); };\r\n    Chain(): Chain { return new Chain(); };\r\n    ChainBend(): ChainBend { return new ChainBend(); };\r\n    Door(): Door { return new Door(); };\r\n    EndDoor(): EndDoor { return new EndDoor(); };\r\n    WarpDoor(): WarpDoor { return new WarpDoor(); };\r\n    LavaSquare(): LavaSquare { return new LavaSquare(); };\r\n    Water(): Water { return new Water(); };\r\n    Bushes(): Bushes { return new Bushes(); };\r\n    Cloud(): Cloud { return new Cloud(); };\r\n    Construction(): Construction { return new Construction(); };\r\n    LightBulb(): LightBulb { return new LightBulb(); };\r\n    RampLeft(): RampLeft { return new RampLeft(); };\r\n    RampRight(): RampRight { return new RampRight(); };\r\n    RobotJoint(): RobotJoint { return new RobotJoint(); };\r\n    Sign(): Sign { return new Sign(); };\r\n    Spikes(): Spikes { return new Spikes(); };\r\n    Wheel(): Wheel { return new Wheel(); };\r\n    PipeCurve(): PipeCurve { return new PipeCurve(); };\r\n    PipeExtension(): PipeExtension { return new PipeExtension(); };\r\n    PipeSteam(): PipeSteam { return new PipeSteam(); };\r\n    PipeTop(): PipeTop { return new PipeTop(); };\r\n    PipeWater(): PipeWater { return new PipeWater(); };\r\n    TravelPipe(): TravelPipe { return new TravelPipe(); };\r\n    Treadmill(): Treadmill { return new Treadmill(); };\r\n    TreadmillRight(): TreadmillRight { return new TreadmillRight(); };\r\n}\r\n\r\nclass BrickBlue extends Entity {\r\n    pushToBackground(): BrickBlue { this.pushed = true; return this; }\r\n    groupTo( tronic: Entity ): BrickBlue { this.group = tronic.tronicnum; return this; }\r\n    stuffWith( stuffable: string ): BrickBlue { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass BrickGlow extends Entity {\r\n    groupTo( tronic: Entity ): BrickGlow { this.group = tronic.tronicnum; return this; }\r\n    stuffWith( stuffable: string ): BrickGlow { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass BrickGreen extends Entity {\r\n    pushToBackground(): BrickGreen { this.pushed = true; return this; }\r\n    groupTo( tronic: Entity ): BrickGreen { this.group = tronic.tronicnum; return this; }\r\n    stuffWith( stuffable: string ): BrickGreen { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass BrickOld extends Entity {\r\n    pushToBackground(): BrickOld { this.pushed = true; return this; }\r\n    groupTo( tronic: Entity ): BrickOld { this.group = tronic.tronicnum; return this; }\r\n    stuffWith( stuffable: string ): BrickOld { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass BrickRed extends Entity {\r\n    pushToBackground(): BrickRed { this.pushed = true; return this; }\r\n    groupTo( tronic: Entity ): BrickRed { this.group = tronic.tronicnum; return this; }\r\n    stuffWith( stuffable: string ): BrickRed { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass VirtualBrick extends Entity {\r\n    groupTo( tronic: Entity ): VirtualBrick { this.group = tronic.tronicnum; return this; }\r\n}\r\n\r\nclass Cartridge extends Entity {\r\n    pushToBackground(): Cartridge { this.pushed = true; return this; }\r\n    groupTo( tronic: Entity ): Cartridge { this.group = tronic.tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Cartridge { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass Desert extends Entity {\r\n    pushToBackground(): Desert { this.pushed = true; return this; }\r\n    groupTo( tronic: Entity ): Desert { this.group = tronic.tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Desert { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass Dirt extends Entity {\r\n    pushToBackground(): Dirt { this.pushed = true; return this; }\r\n    groupTo( tronic: Entity ): Dirt { this.group = tronic.tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Dirt { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass Moon extends Entity {\r\n    pushToBackground(): Moon { this.pushed = true; return this; }\r\n    groupTo( tronic: Entity ): Moon { this.group = tronic.tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Moon { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass OneWay extends Entity {\r\n    pushToBackground(): OneWay { this.pushed = true; return this; }\r\n    spriteVariant( spriteVariant?: string ): OneWay { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass Robot extends Entity {\r\n    pushToBackground(): Robot { this.pushed = true; return this; }\r\n    groupTo( tronic: Entity ): Robot { this.group = tronic.tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Robot { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass Saurus extends Entity {\r\n    pushToBackground(): Saurus { this.pushed = true; return this; }\r\n    groupTo( tronic: Entity ): Saurus { this.group = tronic.tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Saurus { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass Ship extends Entity {\r\n    pushToBackground(): Ship { this.pushed = true; return this; }\r\n    groupTo( tronic: Entity ): Ship { this.group = tronic.tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Ship { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass BounceBlock extends Entity {\r\n    groupTo( tronic: Entity ): BounceBlock { this.group = tronic.tronicnum; return this; }\r\n}\r\n\r\nclass ExplosiveBlock extends Entity {\r\n    pushToBackground(): ExplosiveBlock { this.pushed = true; return this; }\r\n    groupTo( tronic: Entity ): ExplosiveBlock { this.group = tronic.tronicnum; return this; }\r\n    stuffWith( stuffable: string ): ExplosiveBlock { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass Eye extends Entity {\r\n    groupTo( tronic: Entity ): Eye { this.group = tronic.tronicnum; return this; }\r\n}\r\n\r\nclass FallBlock extends Entity {\r\n    // No methods\r\n}\r\n\r\nclass FertBox extends Entity {\r\n    rotate( angle: string | number ): FertBox { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): FertBox { this.group = tronic.tronicnum; return this; }\r\n    stuffWith( stuffable: string ): FertBox { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass GravityBlock extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.grav = \"2\"; // This cannot be toggled to FIXED or FLOAT, only FALL\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): GravityBlock { this.pushed = true; return this; }\r\n    label( label: string ): GravityBlock { this.comment = label; return this; }\r\n}\r\n\r\nclass IceBlock extends Entity {\r\n    groupTo( tronic: Entity ): IceBlock { this.group = tronic.tronicnum; return this; }\r\n    stuffWith( stuffable: string ): IceBlock { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass InvisableBlock extends Entity {\r\n    rotate( angle: string | number ): InvisableBlock { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): InvisableBlock { this.group = tronic.tronicnum; return this; }\r\n    stuffWith( stuffable: string ): InvisableBlock { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass KaizoBlock extends Entity {\r\n    rotate( angle: string | number ): KaizoBlock { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): KaizoBlock { this.group = tronic.tronicnum; return this; }\r\n    stuffWith( stuffable: string ): KaizoBlock { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass MetalBlock extends Entity {\r\n    groupTo( tronic: Entity ): MetalBlock { this.group = tronic.tronicnum; return this; }\r\n}\r\n\r\nclass QuestionBlock extends Entity {\r\n    rotate( angle: string | number ): QuestionBlock { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): QuestionBlock { this.group = tronic.tronicnum; return this; }\r\n    stuffWith( stuffable: string ): QuestionBlock { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass FloatBlock extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    rotate( angle: string | number ): FloatBlock { this.position.d = angle; return this; }\r\n}\r\n\r\nclass SpringBlock extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    rotate( angle: string | number ): SpringBlock { this.position.d = angle; return this; }\r\n}\r\n\r\nclass Chain extends Entity {\r\n    pushToBackground(): Chain { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): Chain { this.position.d = angle; return this; }\r\n}\r\n\r\nclass ChainBend extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.name = \"Chain Bend\"; // exceptionally has a space in name, therefore the constructor.name is not used here\r\n    }\r\n    pushToBackground(): ChainBend { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): ChainBend { this.position.d = angle; return this; }\r\n}\r\n\r\n// TODO Must make 2 doors and have their tronicnum refer each other\r\nclass Door extends Entity {\r\n    destinationDoor( door: Entity ): Door { this.door = door.tronicnum; return this; }\r\n    groupTo( tronic: Entity ): Door { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): Door { this.comment = label; return this; }\r\n}\r\n\r\nclass EndDoor extends Entity {\r\n    groupTo( tronic: Entity ): EndDoor { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): EndDoor { this.comment = label; return this; }\r\n}\r\n\r\nclass WarpDoor extends Entity {\r\n    groupTo( tronic: Entity ): WarpDoor { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): WarpDoor { this.comment = label; return this; }\r\n    warpTo( level: string ): WarpDoor { this.warp = level; return this; }\r\n}\r\n\r\nclass LavaSquare extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.load = \"t\"; // Lava always spawn with a load option of \"t\" (for transparent ?)\r\n    }\r\n    groupTo( tronic: Entity ): LavaSquare { this.group = tronic.tronicnum; return this; }\r\n}\r\n\r\nclass Water extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.load = \"t\"; // Water always spawn with a load option of \"t\" (for transparent ?)\r\n    }\r\n    groupTo( tronic: Entity ): Water { this.group = tronic.tronicnum; return this; }\r\n}\r\n\r\n// Takes up 1x4 area. Coords represent its base, therefore it occupies 3 more squares in the direction of its rotation.\r\nclass Bushes extends Entity {\r\n    rotate( angle: string | number ): Bushes { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): Bushes { this.group = tronic.tronicnum; return this; }\r\n}\r\n\r\n// Takes up 4x1 area, Coords represent the 3rd block from the left, therefore it occupies 2 squares left and 1 square right of where it is placed\r\n// Even if it can be rotated, it stays in the same shape, therefore I do not include a parameter to affect rotation.\r\nclass Cloud extends Entity {\r\n    \r\n}\r\n\r\nclass Construction extends Entity {\r\n    pushToBackground(): Construction { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): Construction { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): Construction { this.group = tronic.tronicnum; return this; }\r\n}\r\n\r\nclass LightBulb extends Entity {\r\n    pushToBackground(): LightBulb { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): LightBulb { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): LightBulb { this.group = tronic.tronicnum; return this; }\r\n}\r\n\r\n// when placed it occupies a 1x2 area. Coords represent the left-most of the two squares when rotation is 0. (Yellow block, angled like a front-slash)\r\nclass RampLeft extends Entity {\r\n    rotate( angle: string | number ): RampLeft { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): RampLeft { this.group = tronic.tronicnum; return this; }\r\n}\r\n\r\n// when placed it occupies a 1x2 area. Coords represent the right-most of the two squares when rotation is 0. (Blue block, angled like a back-slash)\r\nclass RampRight extends Entity {\r\n    rotate( angle: string | number ): RampRight { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): RampRight { this.group = tronic.tronicnum; return this; }\r\n}\r\n\r\n// when placed it occupies a 1x2 area. Coords represent the right-most of the two squares when rotation is 0.\r\n\t\t// The left-most square can be overlayed on top of a pinball flipper's pointy side to create an articulate joint (when in 2 seperate block groups).\r\nclass RobotJoint extends Entity {\r\n    rotate( angle: string | number ): RobotJoint { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): RobotJoint { this.group = tronic.tronicnum; return this; }\r\n}\r\n\r\nclass Sign extends Entity {\r\n    rotate( angle: string | number ): Sign { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): Sign { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): Sign { this.comment = label; return this; }\r\n    message( message: string ): Sign { this.text = message; return this; }\r\n}\r\n\r\nclass Spikes extends Entity {\r\n    rotate( angle: string | number ): Spikes { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): Spikes { this.group = tronic.tronicnum; return this; }\r\n}\r\n\r\nclass Wheel extends Entity {\r\n    groupTo( tronic: Entity ): Wheel { this.group = tronic.tronicnum; return this; }\r\n}\r\n\r\n// takes 2x2 area. Coords represent the top left corner. rotation 0 (bottom-left corner) rotation 90 (bottom-right corner) rotation 180 (top-right corner) rotation 270 (top-left corner)\r\nclass PipeCurve extends Entity {\r\n    rotate( angle: string | number ): PipeCurve { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): PipeCurve { this.group = tronic.tronicnum; return this; }\r\n}\r\n\r\n// takes 2x2 area. Coords represent the top left corner when rotation 0. The other blocks rotate around this one. rotation 90 (bottom left) 180 (bottom right) 270 (top right)\r\nclass PipeExtension extends Entity {\r\n    rotate( angle: string | number ): PipeExtension { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): PipeExtension { this.group = tronic.tronicnum; return this; }\r\n}\r\n\r\n// takes 2x2 area. Coords represent the bottom left corner when rotation 0 steam goes up. The other blocks rotate around this one. rotation 90 (bottom right) 180 (top right) 270 (bottom left)\r\nclass PipeSteam extends Entity {\r\n    rotate( angle: string | number ): PipeSteam { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): PipeSteam { this.group = tronic.tronicnum; return this; }\r\n}\r\n\r\n// takes 2x2 area. Coords represent the bottom left corner when rotation 0. The other blocks rotate around this one. rotation 90 (bottom right) 180 (top right) 270 (bottom left)\r\nclass PipeTop extends Entity {\r\n    rotate( angle: string | number ): PipeTop { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): PipeTop { this.group = tronic.tronicnum; return this; }\r\n}\r\n\r\n// takes 2x2 area. Coords represent the bottom left corner when rotation 0 water comes out top. The other blocks rotate around this one. rotation 90 (bottom right) 180 (top right) 270 (bottom left)\r\nclass PipeWater extends Entity {\r\n    rotate( angle: string | number ): PipeWater { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): PipeWater { this.group = tronic.tronicnum; return this; }\r\n}\r\n\r\n// takes 2x2 area. Exactly like PipeTop but spawns a 2nd identical pipe in the 2x2 area to the left of the coords.\r\n/**\r\n*\tDepending on its rotation value, the destination pipe spawns at a different coords(x,y) offset and always spawns upright like PipeTop.\r\n*\trotation 0 - (-2,0) rotation 90 - (0,-2) rotation 180 - (2,0) rotation 270 - (0,2) \r\n*\r\n*\tIf you don't know the destinationPipeNum yet because it doesn't exist. It can be skipped, and be defined at a later point.\r\n*\tIt is however necessary to be assigned a valid destination before the output is generated.\r\n*\tBug: if placed next to map edge, its actually possible to get transported outside the map.\r\n*   Bug: if you push both travel pipes to the background, they dissapear. Only the initial pipe can be pushed.\r\n*/\r\n\r\n// TODO: provide a way to spawn 2 pipes that both have each other's tronicnum in their pipe property\r\nclass TravelPipe extends Entity {\r\n    pushToBackground(): TravelPipe { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TravelPipe { this.position.d = angle; return this; }\r\n    destinationPipe( pipe: Entity ): TravelPipe { this.pipe = pipe.tronicnum; return this; }\r\n    groupTo( tronic: Entity ): TravelPipe { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TravelPipe { this.comment = label; return this; }\r\n}\r\n\r\nclass Treadmill extends Entity {\r\n    rotate( angle: string | number ): Treadmill { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): Treadmill { this.group = tronic.tronicnum; return this; }\r\n}\r\n\r\nclass TreadmillRight extends Entity {\r\n    rotate( angle: string | number ): TreadmillRight { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TreadmillRight { this.group = tronic.tronicnum; return this; }\r\n}","export enum TronicconPort {\r\n    FLOW_A = \"fa\",\r\n    FLOW_B = \"fb\",\r\n    DATA_A = \"da\",\r\n    DATA_B = \"db\",\r\n    DATA_O = \"do\",\r\n    DATA_Z = \"dz\"\r\n};","import { Entity } from \"./Entity\";\r\nimport { Tronicnum } from \"./Entity\";\r\nimport { Troniccon } from \"./Entity\";\r\nimport { TronicconPort } from \"../enum/TronicconPort\";\r\n\r\nexport class Tronic {\r\n    TronicDelay(): TronicDelay { return new TronicDelay(); };\r\n    TronicIf(): TronicIf { return new TronicIf(); };\r\n    TronicBurnout(): TronicBurnout { return new TronicBurnout(); };\r\n    TronicData(): TronicData { return new TronicData(); };\r\n    TronicRedData(): TronicRedData { return new TronicRedData(); };\r\n    TronicBrick(): TronicBrick { return new TronicBrick(); };\r\n    TronicBumper(): TronicBumper { return new TronicBumper(); };\r\n    TronicDpad(): TronicDpad { return new TronicDpad(); };\r\n    TronicPulse(): TronicPulse { return new TronicPulse(); };\r\n    TronicPushButton(): TronicPushButton { return new TronicPushButton(); };\r\n    TronicTwitch(): TronicTwitch { return new TronicTwitch(); };\r\n    TronicArea(): TronicArea { return new TronicArea(); };\r\n    TronicPipeArea(): TronicPipeArea { return new TronicPipeArea(); };\r\n    TronicProximity(): TronicProximity { return new TronicProximity(); };\r\n    TronicLoadLevel(): TronicLoadLevel { return new TronicLoadLevel(); };\r\n    TronicMusic(): TronicMusic { return new TronicMusic(); };\r\n    TronicSky(): TronicSky { return new TronicSky(); };\r\n    TronicStarfall(): TronicStarfall { return new TronicStarfall(); };\r\n    TronicBoss(): TronicBoss { return new TronicBoss(); };\r\n    TronicDeadCheck(): TronicDeadCheck { return new TronicDeadCheck(); };\r\n    TronicDialog(): TronicDialog { return new TronicDialog(); };\r\n    TronicNPC(): TronicNPC { return new TronicNPC(); };\r\n    TronicTalk(): TronicTalk { return new TronicTalk(); };\r\n    TronicThingCount(): TronicThingCount { return new TronicThingCount(); };\r\n    TronicWalk(): TronicWalk { return new TronicWalk(); };\r\n    TronicDetonator(): TronicDetonator { return new TronicDetonator(); };\r\n    TronicDisplay(): TronicDisplay { return new TronicDisplay(); };\r\n    TronicGrabber(): TronicGrabber { return new TronicGrabber(); };\r\n    TronicGravity(): TronicGravity { return new TronicGravity(); };\r\n    TronicLight(): TronicLight { return new TronicLight(); };\r\n    TronicMove(): TronicMove { return new TronicMove(); };\r\n    TronicPixel(): TronicPixel { return new TronicPixel(); };\r\n    TronicSpawn(): TronicSpawn { return new TronicSpawn(); };\r\n    TronicFlipper(): TronicFlipper { return new TronicFlipper(); };\r\n    TronicSpinner(): TronicSpinner { return new TronicSpinner(); };\r\n    TronicStepper(): TronicStepper { return new TronicStepper(); };\r\n    Thruster(): Thruster { return new Thruster(); };\r\n    TronicFan(): TronicFan { return new TronicFan(); };\r\n    TronicMotor(): TronicMotor { return new TronicMotor(); };\r\n    TronicTreadmill(): TronicTreadmill { return new TronicTreadmill(); };\r\n    TronicCalc(): TronicCalc { return new TronicCalc(); };\r\n    TronicContains(): TronicContains { return new TronicContains(); };\r\n    TronicDistance(): TronicDistance { return new TronicDistance(); };\r\n    TronicRandom(): TronicRandom { return new TronicRandom(); };\r\n    TronicReplace(): TronicReplace { return new TronicReplace(); };\r\n    TronicSet(): TronicSet { return new TronicSet(); };\r\n    TronicArrayReplace(): TronicArrayReplace { return new TronicArrayReplace(); };\r\n    TronicSplit(): TronicSplit { return new TronicSplit(); };\r\n    TronicSplitCount(): TronicSplitCount { return new TronicSplitCount(); };\r\n}\r\n\r\nclass TronicDelay extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicDelay { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicDelay { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicDelay { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicDelay { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicDelay { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    delayInSeconds( tronic: Entity ): TronicDelay { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n}\r\n\r\n/**\r\n*\tifOperator - \">\" or \"=\"\r\n*/\r\nclass TronicIf extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicIf { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicIf { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicIf { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicIf { this.comment = label; return this; }\r\n\r\n    ifOperator( operator: string ): TronicIf { this.if = operator; return this; }\r\n\r\n    trueFlowTo( tronic: Entity ): TronicIf { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    falseFlowTo( tronic: Entity ): TronicIf { new Troniccon().set( TronicconPort.FLOW_B, tronic, this ); return this; }\r\n    a( tronic: Entity ): TronicIf { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n    b( tronic: Entity ): TronicIf { new Troniccon().set( TronicconPort.DATA_B, tronic, this ); return this; }    \r\n}\r\n\r\nclass TronicBurnout extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicBurnout { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicBurnout { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicBurnout { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicBurnout { this.comment = label; return this; }\r\n\r\n    flowTo( tronic: Entity ): TronicBurnout { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicData extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicData { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicData { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicData { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicData { this.comment = label; return this; }\r\n    data( data: string ): TronicData { this.text = data; return this; }\r\n}\r\n\r\nclass TronicRedData extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicRedData { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicRedData { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicRedData { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicRedData { this.comment = label; return this; }\r\n    data( data: string ): TronicRedData { this.text = data; return this; }\r\n}\r\n\r\nclass TronicBrick extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    rotate( angle: string | number ): TronicBrick { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicBrick { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicBrick { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicBrick { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicBumper extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    rotate( angle: string | number ): TronicBumper { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicBumper { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicBumper { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicBumper { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicDpad extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicDpad { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicDpad { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicDpad { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicDpad { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicDpad { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    directionOut( tronic: Entity ): TronicDpad { new Troniccon().set( TronicconPort.DATA_O, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicPulse extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicPulse { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicPulse { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicPulse { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicPulse { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicPulse { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    delayInSeconds( tronic: Entity ): TronicPulse { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n    toggleTrueFalse( tronic: Entity ): TronicPulse { new Troniccon().set( TronicconPort.DATA_B, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicPushButton extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    rotate( angle: string | number ): TronicPushButton { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicPushButton { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicPushButton { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicPushButton { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicTwitch extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicTwitch { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicTwitch { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicTwitch { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicTwitch { this.comment = label; return this; }\r\n    bangCommand( command: string ): TronicTwitch { this.bang = command; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicTwitch { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    commandOutput( tronic: Entity ): TronicTwitch { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n}\r\n\r\n// detects a 3x5 box above itself\r\nclass TronicArea extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicArea { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicArea { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicArea { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicArea { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicArea { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    what( tronic: Entity ): TronicArea { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n}\r\n\r\n// coords are bottom left of a 2x3 detection area at rotation 0 (rotate counterclockwise)\r\nclass TronicPipeArea extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicPipeArea { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicPipeArea { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicPipeArea { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicPipeArea { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicPipeArea { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    what( tronic: Entity ): TronicPipeArea { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicProximity extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicProximity { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicProximity { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicProximity { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicProximity { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicProximity { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    what( tronic: Entity ): TronicProximity { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicLoadLevel extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicLoadLevel { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicLoadLevel { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicLoadLevel { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicLoadLevel { this.comment = label; return this; }\r\n    \r\n    levelName( tronic: Entity ): TronicLoadLevel { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicMusic extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicMusic { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicMusic { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicMusic { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicMusic { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicMusic { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    trackNum( tronic: Entity ): TronicMusic { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicSky extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicSky { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicSky { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicSky { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicSky { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicSky { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    backgroundColor( tronic: Entity ): TronicSky { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n    lightColor( tronic: Entity ): TronicSky { new Troniccon().set( TronicconPort.DATA_B, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicStarfall extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicStarfall { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicStarfall { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicStarfall { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicStarfall { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicStarfall { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    toggleOnOff( tronic: Entity ): TronicStarfall { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicBoss extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicBoss { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicBoss { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicBoss { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicBoss { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicBoss { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    who( tronic: Entity ): TronicBoss { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n    hp( tronic: Entity ): TronicBoss { new Troniccon().set( TronicconPort.DATA_B, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicDeadCheck extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicDeadCheck { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicDeadCheck { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicDeadCheck { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicDeadCheck { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicDeadCheck { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    who( tronic: Entity ): TronicDeadCheck { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicDialog extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicDialog { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicDialog { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicDialog { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicDialog { this.comment = label; return this; }\r\n    dialog( text: string ): TronicDialog { this.text = text; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicDialog { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    continue( tronic: Entity ): TronicDialog { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n}\r\n\r\n// Mode wander stopleft stopright safe danger\r\nclass TronicNPC extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicNPC { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicNPC { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicNPC { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicNPC { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicNPC { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    who( tronic: Entity ): TronicNPC { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n    mode( tronic: Entity ): TronicNPC { new Troniccon().set( TronicconPort.DATA_B, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicTalk extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicTalk { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicTalk { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicTalk { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicTalk { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicTalk { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    who( tronic: Entity ): TronicTalk { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n    say( tronic: Entity ): TronicTalk { new Troniccon().set( TronicconPort.DATA_B, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicThingCount extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicThingCount { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicThingCount { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicThingCount { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicThingCount { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicThingCount { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    who( tronic: Entity ): TronicThingCount { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n    howMany( tronic: Entity ): TronicThingCount { new Troniccon().set( TronicconPort.DATA_O, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicWalk extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicWalk { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicWalk { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicWalk { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicWalk { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicWalk { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    who( tronic: Entity ): TronicWalk { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n    goHere( tronic: Entity ): TronicWalk { new Troniccon().set( TronicconPort.DATA_B, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicDetonator extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    rotate( angle: string | number ): TronicDetonator { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicDetonator { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicDetonator { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicDetonator { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicDisplay extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicDisplay { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicDisplay { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicDisplay { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicDisplay { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicDisplay { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    print( tronic: Entity ): TronicDisplay { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n}\r\n\r\n// state open | closing | closed\r\n// in order to be set, must be connected to the output of a TronicSet.\r\n// TronicData[<state>] -> TronicSet -> TronicGrabber\r\nclass TronicGrabber extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    rotate( angle: string | number ): TronicGrabber { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicGrabber { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicGrabber { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicGrabber { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n}\r\n\r\n// gravity() - sets initial mode as a string float | fixed | fall\r\n// mode() - needs a TronicData containing a mode to change to float | fixed | fall\r\nclass TronicGravity extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicGravity { this.pushed = true; return this; }\r\n    label( label: string ): TronicGravity { this.comment = label; return this; }\r\n    gravity( initialMode: string ): TronicGravity { this.grav = initialMode; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicGravity { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    mode( tronic: Entity ): TronicGravity { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicLight extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicLight { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicLight { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicLight { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicLight { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicLight { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    color( tronic: Entity ): TronicLight { new Troniccon().set( TronicconPort.DATA_B, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicMove extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    flowTo( tronic: Entity ): TronicMove { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    moveTo( tronic: Entity ): TronicMove { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n    lastPosition( tronic: Entity ): TronicMove { new Troniccon().set( TronicconPort.DATA_B, tronic, this ); return this; }\r\n    speed( tronic: Entity ): TronicMove { new Troniccon().set( TronicconPort.DATA_O, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicPixel extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicPixel { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicPixel { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicPixel { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicPixel { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicPixel { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    color( tronic: Entity ): TronicPixel { new Troniccon().set( TronicconPort.DATA_B, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicSpawn extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    rotate( angle: string | number ): TronicSpawn { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicSpawn { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicSpawn { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicSpawn { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    what( tronic: Entity ): TronicSpawn { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n    rename( tronic: Entity ): TronicSpawn { new Troniccon().set( TronicconPort.DATA_B, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicFlipper extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    rotate( angle: string | number ): TronicFlipper { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicFlipper { this.group = tronic.tronicnum; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicFlipper { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    torque( tronic: Entity ): TronicFlipper { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicSpinner extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    rotate( angle: string | number ): TronicSpinner { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicSpinner { this.group = tronic.tronicnum; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicSpinner { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    torque( tronic: Entity ): TronicSpinner { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n}\r\n\r\n// direction - counterclockwise = -1, clockwise = 1\r\nclass TronicStepper extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    rotate( angle: string | number ): TronicStepper { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicStepper { this.group = tronic.tronicnum; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicStepper { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    direction( tronic: Entity ): TronicStepper { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n}\r\n\r\nclass Thruster extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    rotate( angle: string | number ): Thruster { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): Thruster { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): Thruster { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): Thruster { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    thrust( tronic: Entity ): Thruster { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicFan extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    rotate( angle: string | number ): TronicFan { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicFan { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicFan { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicFan { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    thrust( tronic: Entity ): TronicFan { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicMotor extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    rotate( angle: string | number ): TronicMotor { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicMotor { this.group = tronic.tronicnum; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicMotor { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    torque( tronic: Entity ): TronicMotor { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n}\r\n\r\n// direction - counterclockwise = -1, clockwise = 1\r\nclass TronicTreadmill extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    rotate( angle: string | number ): TronicTreadmill { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicTreadmill { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicTreadmill { this.comment = label; return this; }\r\n    \r\n    flowTo( tronic: Entity ): TronicTreadmill { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    direction( tronic: Entity ): TronicTreadmill { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n}\r\n\r\n// calcOperator - undefined = plus, 1 = minus, 2 = multiply, 3 = divide, 4 = combine, 5 = modulo, 6 = exponential, 7 = percentage\r\nclass TronicCalc extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicCalc { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicCalc { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicCalc { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicCalc { this.comment = label; return this; }\r\n\r\n    calcOperator( operator: string ) { this.calc = operator; return this; }\r\n\r\n    flowTo( tronic: Entity ): TronicCalc { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    a( tronic: Entity ): TronicCalc { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n    b( tronic: Entity ): TronicCalc { new Troniccon().set( TronicconPort.DATA_B, tronic, this ); return this; }\r\n    result( tronic: Entity ): TronicCalc { new Troniccon().set( TronicconPort.DATA_O, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicContains extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicContains { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicContains { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicContains { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicContains { this.comment = label; return this; }\r\n\r\n    trueFlowTo( tronic: Entity ): TronicContains { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    falseFlowTo( tronic: Entity ): TronicContains { new Troniccon().set( TronicconPort.FLOW_B, tronic, this ); return this; }\r\n    textToSearch( tronic: Entity ): TronicContains { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n    valueToFind( tronic: Entity ): TronicContains { new Troniccon().set( TronicconPort.DATA_B, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicDistance extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicDistance { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicDistance { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicDistance { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicDistance { this.comment = label; return this; }\r\n\r\n    flowTo( tronic: Entity ): TronicDistance { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    positionA( tronic: Entity ): TronicDistance { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n    positionB( tronic: Entity ): TronicDistance { new Troniccon().set( TronicconPort.DATA_B, tronic, this ); return this; }\r\n    distanceOut( tronic: Entity ): TronicDistance { new Troniccon().set( TronicconPort.DATA_O, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicRandom extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicRandom { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicRandom { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicRandom { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicRandom { this.comment = label; return this; }\r\n\r\n    flowTo( tronic: Entity ): TronicRandom { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    min( tronic: Entity ): TronicRandom { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n    max( tronic: Entity ): TronicRandom { new Troniccon().set( TronicconPort.DATA_B, tronic, this ); return this; }\r\n    output( tronic: Entity ): TronicRandom { new Troniccon().set( TronicconPort.DATA_O, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicReplace extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicReplace { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicReplace { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicReplace { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicReplace { this.comment = label; return this; }\r\n\r\n    flowTo( tronic: Entity ): TronicReplace { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    oldValue( tronic: Entity ): TronicReplace { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n    newValue( tronic: Entity ): TronicReplace { new Troniccon().set( TronicconPort.DATA_B, tronic, this ); return this; }\r\n    input( tronic: Entity ): TronicReplace { new Troniccon().set( TronicconPort.DATA_O, tronic, this ); return this; }\r\n    output( tronic: Entity ): TronicReplace { new Troniccon().set( TronicconPort.DATA_Z, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicSet extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicSet { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicSet { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicSet { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicSet { this.comment = label; return this; }\r\n\r\n    flowTo( tronic: Entity ): TronicSet { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    input( tronic: Entity ): TronicSet { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n    output( tronic: Entity ): TronicSet { new Troniccon().set( TronicconPort.DATA_O, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicArrayReplace extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicArrayReplace { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicArrayReplace { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicArrayReplace { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicArrayReplace { this.comment = label; return this; }\r\n\r\n    flowTo( tronic: Entity ): TronicArrayReplace { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    index( tronic: Entity ): TronicArrayReplace { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n    newValue( tronic: Entity ): TronicArrayReplace { new Troniccon().set( TronicconPort.DATA_B, tronic, this ); return this; }\r\n    input( tronic: Entity ): TronicArrayReplace { new Troniccon().set( TronicconPort.DATA_O, tronic, this ); return this; }\r\n    output( tronic: Entity ): TronicArrayReplace { new Troniccon().set( TronicconPort.DATA_Z, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicSplit extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicSplit { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicSplit { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicSplit { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicSplit { this.comment = label; return this; }\r\n\r\n    flowTo( tronic: Entity ): TronicSplit { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    input( tronic: Entity ): TronicSplit { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n    index( tronic: Entity ): TronicSplit { new Troniccon().set( TronicconPort.DATA_B, tronic, this ); return this; }\r\n    result( tronic: Entity ): TronicSplit { new Troniccon().set( TronicconPort.DATA_O, tronic, this ); return this; }\r\n}\r\n\r\nclass TronicSplitCount extends Entity {\r\n    constructor() {\r\n        super();\r\n        this.tronictype = \"null\";\r\n        this.tronicnum = new Tronicnum().set( this.position.x, this.position.y, this.position.z );\r\n    }\r\n    pushToBackground(): TronicSplitCount { this.pushed = true; return this; }\r\n    rotate( angle: string | number ): TronicSplitCount { this.position.d = angle; return this; }\r\n    groupTo( tronic: Entity ): TronicSplitCount { this.group = tronic.tronicnum; return this; }\r\n    label( label: string ): TronicSplitCount { this.comment = label; return this; }\r\n\r\n    flowTo( tronic: Entity ): TronicSplitCount { new Troniccon().set( TronicconPort.FLOW_A, tronic, this ); return this; }\r\n    input( tronic: Entity ): TronicSplitCount { new Troniccon().set( TronicconPort.DATA_A, tronic, this ); return this; }\r\n    count( tronic: Entity ): TronicSplitCount { new Troniccon().set( TronicconPort.DATA_O, tronic, this ); return this; }\r\n}","import { Entity } from \"./Entity\";\r\n\r\nexport class Monster {\r\n    Blip(): Blip { return new Blip(); }\r\n    BlipBat(): BlipBat { return new BlipBat(); }\r\n    BlipGhost(): BlipGhost { return new BlipGhost(); }\r\n    BlipShadow(): BlipShadow { return new BlipShadow(); }\r\n    BouncingBlip(): BouncingBlip { return new BouncingBlip(); }\r\n    BrightBlip(): BrightBlip { return new BrightBlip(); }\r\n    CoinBlip(): CoinBlip { return new CoinBlip(); }\r\n    LavaBlip(): LavaBlip { return new LavaBlip(); }\r\n    Neko(): Neko { return new Neko(); }\r\n    NekoPilot(): NekoPilot { return new NekoPilot(); }\r\n    NekoPolice(): NekoPolice { return new NekoPolice(); }\r\n    NekoPoliceChief(): NekoPoliceChief { return new NekoPoliceChief(); }\r\n    PugAxe(): PugAxe { return new PugAxe(); }\r\n    GameKid(): GameKid { return new GameKid(); }\r\n    GameKidBlue(): GameKidBlue { return new GameKidBlue(); }\r\n    GameKidRed(): GameKidRed { return new GameKidRed(); }\r\n    Grubby(): Grubby { return new Grubby(); }\r\n    PrairiePiranha(): PrairiePiranha { return new PrairiePiranha(); }\r\n    YellowMan(): YellowMan { return new YellowMan(); }\r\n    Penguin(): Penguin { return new Penguin(); }\r\n    Chibi(): Chibi { return new Chibi(); }\r\n    Normish(): Normish { return new Normish(); }\r\n    Mummy(): Mummy { return new Mummy(); }\r\n    Skeleton(): Skeleton { return new Skeleton(); }\r\n    SkeletonKnight(): SkeletonKnight { return new SkeletonKnight(); }\r\n    SkeletonRed(): SkeletonRed { return new SkeletonRed(); }\r\n    FireSnail(): FireSnail { return new FireSnail(); }\r\n    Snail(): Snail { return new Snail(); }\r\n    SnailFly(): SnailFly { return new SnailFly(); }\r\n    PipeMonster(): PipeMonster { return new PipeMonster(); }\r\n    PipeMonsterFire(): PipeMonsterFire { return new PipeMonsterFire(); }\r\n    Zilla(): Zilla { return new Zilla(); }\r\n    ZillaBullet(): ZillaBullet { return new ZillaBullet(); }\r\n    ZillaJetpack(): ZillaJetpack { return new ZillaJetpack(); }\r\n    ZillaJump(): ZillaJump { return new ZillaJump(); }\r\n    ZillaVac(): ZillaVac { return new ZillaVac(); }\r\n    BlipKing(): BlipKing { return new BlipKing(); }\r\n}\r\n\r\n\r\nclass Blip extends Entity {\r\n\r\n}\r\n\r\nclass BlipBat extends Entity {\r\n\r\n}\r\n\r\nclass BlipGhost extends Entity {\r\n\r\n}\r\n\r\nclass BlipShadow extends Entity {\r\n\r\n}\r\n\r\nclass BouncingBlip extends Entity {\r\n\r\n}\r\n\r\nclass BrightBlip extends Entity {\r\n\r\n}\r\n\r\nclass CoinBlip extends Entity {\r\n\r\n}\r\n\r\nclass LavaBlip extends Entity {\r\n\r\n}\r\n\r\nclass Neko extends Entity {\r\n\r\n}\r\n\r\nclass NekoPilot extends Entity {\r\n\r\n}\r\n\r\nclass NekoPolice extends Entity {\r\n\r\n}\r\n\r\nclass NekoPoliceChief extends Entity {\r\n\r\n}\r\n\r\nclass PugAxe extends Entity {\r\n\r\n}\r\n\r\nclass GameKid extends Entity {\r\n\r\n}\r\n\r\nclass GameKidBlue extends Entity {\r\n\r\n}\r\n\r\nclass GameKidRed extends Entity {\r\n\r\n}\r\n\r\nclass Grubby extends Entity {\r\n\r\n}\r\n\r\nclass PrairiePiranha extends Entity {\r\n\r\n}\r\n\r\nclass YellowMan extends Entity {\r\n\r\n}\r\n\r\nclass Penguin extends Entity {\r\n\r\n}\r\n\r\n// TODO: split spriteVariant in hair/shirt/color.. etc..\r\nclass Chibi extends Entity {\r\n    spriteVariant( spriteVariant?: string ): Chibi { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass Normish extends Entity {\r\n    spriteVariant( spriteVariant?: string ): Chibi { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass Mummy extends Entity {\r\n\r\n}\r\n\r\nclass Skeleton extends Entity {\r\n\r\n}\r\n\r\nclass SkeletonKnight extends Entity {\r\n\r\n}\r\n\r\nclass SkeletonRed extends Entity {\r\n\r\n}\r\n\r\nclass FireSnail extends Entity {\r\n\r\n}\r\n\r\nclass Snail extends Entity {\r\n\r\n}\r\n\r\nclass SnailFly extends Entity {\r\n\r\n}\r\n\r\nclass PipeMonster extends Entity {\r\n    rotate( angle: string | number ): PipeMonster { this.position.d = angle; return this; }\r\n    groupTo( tronicnum: string | number ): PipeMonster { this.group = tronicnum; return this; }\r\n    stuffWith( stuffable: string ): PipeMonster { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass PipeMonsterFire extends Entity {\r\n    rotate( angle: string | number ): PipeMonsterFire { this.position.d = angle; return this; }\r\n    groupTo( tronicnum: string | number ): PipeMonsterFire { this.group = tronicnum; return this; }\r\n    stuffWith( stuffable: string ): PipeMonsterFire { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass Zilla extends Entity {\r\n\r\n}\r\n\r\nclass ZillaBullet extends Entity {\r\n\r\n}\r\n\r\nclass ZillaJetpack extends Entity {\r\n\r\n}\r\n\r\nclass ZillaJump extends Entity {\r\n\r\n}\r\n\r\nclass ZillaVac extends Entity {\r\n\r\n}\r\n\r\nclass BlipKing extends Entity {\r\n    stuffWith( stuffable: string ): BlipKing { this.contain = stuffable; return this; }\r\n}","import { Entity } from \"./Entity\";\r\n\r\nexport class Item {\r\n    Coin(): Coin { return new Coin(); };\r\n    OneUp(): OneUp { return new OneUp(); };\r\n    StarShard(): StarShard { return new StarShard(); };\r\n    Donut(): Donut { return new Donut(); };\r\n    LightBlock(): LightBlock { return new LightBlock(); };\r\n    AstroIcecream(): AstroIcecream { return new AstroIcecream(); };\r\n    BomberGet(): BomberGet { return new BomberGet(); };\r\n    Boot(): Boot { return new Boot(); };\r\n    CheeseBurger(): CheeseBurger { return new CheeseBurger(); };\r\n    Cookie(): Cookie { return new Cookie(); };\r\n    Fireball(): Fireball { return new Fireball(); };\r\n    GetHappy(): GetHappy { return new GetHappy(); };\r\n    Hat(): Hat { return new Hat(); };\r\n    SanicBurger(): SanicBurger { return new SanicBurger(); };\r\n    VideoGame(): VideoGame { return new VideoGame(); };\r\n    WalkGuy(): WalkGuy { return new WalkGuy(); };\r\n    Watermelon(): Watermelon { return new Watermelon(); };\r\n    Bomb(): Bomb { return new Bomb(); };\r\n    FireShell(): FireShell { return new FireShell(); };\r\n    Shell(): Shell { return new Shell(); };\r\n    Skateboard(): Skateboard { return new Skateboard(); };\r\n}\r\n\r\nclass Coin extends Entity {\r\n\r\n}\r\n\r\nclass OneUp extends Entity {\r\n\r\n}\r\n\r\nclass StarShard extends Entity {\r\n\r\n}\r\n\r\nclass Donut extends Entity {\r\n\r\n}\r\n\r\nclass LightBlock extends Entity {\r\n\r\n}\r\n\r\nclass AstroIcecream extends Entity {\r\n\r\n}\r\n\r\nclass BomberGet extends Entity {\r\n\r\n}\r\n\r\nclass Boot extends Entity {\r\n\r\n}\r\n\r\nclass CheeseBurger extends Entity {\r\n\r\n}\r\n\r\nclass Cookie extends Entity {\r\n\r\n}\r\n\r\nclass Fireball extends Entity {\r\n\r\n}\r\n\r\nclass GetHappy extends Entity {\r\n\r\n}\r\n\r\nclass Hat extends Entity {\r\n\r\n}\r\n\r\nclass SanicBurger extends Entity {\r\n\r\n}\r\n\r\nclass VideoGame extends Entity {\r\n\r\n}\r\n\r\nclass WalkGuy extends Entity {\r\n\r\n}\r\n\r\nclass Watermelon extends Entity {\r\n\r\n}\r\n\r\nclass Bomb extends Entity {\r\n\r\n}\r\n\r\nclass FireShell extends Entity {\r\n\r\n}\r\n\r\nclass Shell extends Entity {\r\n\r\n}\r\n\r\nclass Skateboard extends Entity {\r\n    rotate( angle: string | number ): Skateboard { this.position.d = angle; return this; }\r\n}","import { Block } from \"./Block\";\r\nimport { Tronic } from \"./Tronic\";\r\nimport { Monster } from \"./Monster\";\r\nimport { Item } from \"./Item\";\r\n\r\nexport class Js2tronic {\r\n    readonly block: Block;\r\n    readonly tronic: Tronic;\r\n    readonly monster: Monster;\r\n    readonly item: Item;\r\n    constructor () {\r\n        this.block = new Block();\r\n        this.tronic = new Tronic();\r\n        this.monster = new Monster();\r\n        this.item = new Item();\r\n    }\r\n}","export enum Stuffable {\r\n    BLIP = \"Blip\",\r\n    BLIPBAT = \"BlipBat\",\r\n    BLIPGHOST = \"BlipGhost\",\r\n    BLIPSHADOW = \"BlipShadow\",\r\n    BOUNCINGBLIP = \"BouncingBlip\",\r\n    BRIGHTBLIP = \"BrightBlip\",\r\n    COINBLIP = \"CoinBlip\",\r\n    LAVABLIP = \"LavaBlip\",\r\n    NEKO = \"Neko\",\r\n    NEKOPILOT = \"NekoPilot\",\r\n    NEKOPOLICE = \"NekoPolice\",\r\n    NEKOPOLICECHIEF = \"NekoPoliceChief\",\r\n    PUGAXE = \"PugAxe\",\r\n    GAMEKID = \"GameKid\",\r\n    GAMEKIDBLUE = \"GameKidBlue\",\r\n    GAMEKIDRED = \"GameKidRed\",\r\n    GRUBBY = \"Grubby\",\r\n    PRAIRIEPIRANHA = \"PrairiePiranha\",\r\n    YELLOWMAN = \"YellowMan\",\r\n    PENGUIN = \"Penguin\",\r\n    MUMMY = \"Mummy\",\r\n    SKELETON = \"Skeleton\",\r\n    SKELETONKNIGHT = \"SkeletonKnight\",\r\n    SKELETONRED = \"SkeletonRed\",\r\n    FIRESNAIL = \"FireSnail\",\r\n    SNAIL = \"Snail\",\r\n    SNAILFLY = \"SnailFly\",\r\n    COIN = \"Coin\",\r\n    ONEUP = \"OneUp\",\r\n    STARSHARD = \"StarShard\",\r\n    DONUT = \"Donut\",\r\n    LIGHTBLOCK = \"LightBlock\",\r\n    ASTROICECREAM = \"AstroIcecream\",\r\n    BOMBERGET = \"BomberGet\",\r\n    BOOT = \"Boot\",\r\n    CHEESEBURGER = \"CheeseBurger\",\r\n    COOKIE = \"Cookie\",\r\n    FIREBALL = \"Fireball\",\r\n    GETHAPPY = \"GetHappy\",\r\n    HAT = \"Hat\",\r\n    SANICBURGER = \"SanicBurger\",\r\n    VIDEOGAME = \"VideoGame\",\r\n    WALKGUY = \"WalkGuy\",\r\n    WATERMELON = \"Watermelon\",\r\n    BOMB = \"Bomb\",\r\n    FIRESHELL = \"FireShell\",\r\n    SHELL = \"Shell\",\r\n    SKATEBOARD = \"Skateboard\"\r\n};","export enum CartridgeVariant {\r\n    FLOOR = \"cartridge_3\",\r\n    FILLER = \"cartridge_5\",\r\n    CEILING = \"cartridge_7\"\r\n}","export enum DesertVariant {\r\n    TOP_LEFT_CORNER = \"desert_0\",\r\n    TOP_PURPLE_BLUE = \"desert_1\",\r\n    TOP_RIGHT_CORNER = \"desert_2\",\r\n    FILLER = \"desert_3\",\r\n    TOP_GREEN = \"desert_4\",\r\n    TOP_ORANGE = \"desert_5\",\r\n    BOTTOM_LEFT_CORNER = \"desert_6\",\r\n    BOTTOM = \"desert_7\",\r\n    BOTTOM_RIGHT_CORNER = \"desert_8\"\r\n}","export enum DirtVariant {\r\n    TOP_LONG = \"ground_0\",\r\n    TOP_SHORT = \"ground_1\",\r\n    TOP_RIGHT_CORNER = \"ground_2\",\r\n    TOP_LEFT_CORNER = \"ground_3\",\r\n    FILLER = \"ground_4\",\r\n    FILLER_ONE_PATCH = \"ground_5\",\r\n    FILLER_TWO_PATCHES = \"ground_6\",\r\n    BOTTOM_LONG = \"ground_7\",\r\n    BOTTOM_SHORT = \"ground_8\"\r\n}","export enum MoonVariant {\r\n    TOP_FLAT = \"moon_0\",\r\n    TOP_BUMP = \"moon_1\",\r\n    TOP_RIGHT_CORNER = \"moon_2\",\r\n    TOP_LEFT_CORNER = \"moon_3\",\r\n    FILLER = \"moon_4\",\r\n    FILLER_SMALL_CRATER = \"moon_5\",\r\n    FILLER_BIG_CRATER = \"moon_6\",\r\n    BOTTOM_LONG = \"moon_7\",\r\n    BOTTOM_SHORT = \"moon_8\"\r\n}","export enum OneWayVariant {\r\n    TOP_LEFT_CORNER = \"platform_0\",\r\n    TOP_RIGHT_CORNER = \"platform_1\",\r\n    BOTTOM_RIGHT_CORNER = \"platform_2\",\r\n    BOTTOM_LEFT_CORNER = \"platform_3\",\r\n    TOP = \"platform_4\",\r\n    BOTTOM = \"platform_5\",\r\n    FILLER = \"platform_6\"\r\n}","export enum RobotVariant {\r\n    TOP_ACCENT = \"robotblock_0\",\r\n    TOP = \"robotblock_1\",\r\n    TOP_RIGHT_CORNER = \"robotblock_2\",\r\n    TOP_LEFT_CORNER = \"robotblock_3\",\r\n    FILLER = \"robotblock_4\",\r\n    FILLER_ACCENT = \"robotblock_5\",\r\n    BOTTOM_LEFT_CORNER = \"robotblock_6\",\r\n    BOTTOM = \"robotblock_7\",\r\n    BOTTOM_RIGHT_CORNER = \"robotblock_8\"\r\n}","export enum SaurusVariant {\r\n    TOP_LEFT_CORNER = \"Saurus_0\",\r\n    TOP = \"Saurus_1\",\r\n    TOP_RIGHT_CORNER = \"Saurus_2\",\r\n    FILLER_THREE_SCALES = \"Saurus_3\",\r\n    FILLER_ONE_SCALE = \"Saurus_4\",\r\n    FILLER_TWO_SCALES = \"Saurus_5\",\r\n    BOTTOM_LEFT_CORNER = \"Saurus_6\",\r\n    BOTTOM = \"Saurus_7\",\r\n    BOTTOM_RIGHT_CORNER = \"Saurus_8\"\r\n}","export enum ShipVariant {\r\n    BOTTOM_FIN = \"airship_0\",\r\n    BOTTOM = \"airship_1\",\r\n    BOTTOM_RIGHT_CORNER = \"airship_2\",\r\n    BOTTOM_LEFT_CORNER = \"airship_3\",\r\n    FILLER_SURFACE_NOTCH = \"airship_4\",\r\n    FILLER_RIGHT_NOTCH = \"airship_5\",\r\n    PORTHOLE = \"airship_6\",\r\n    FILLER_LEFT_TOP_RIGHT_NOTCHES_VARIANT_A = \"airship_7\",\r\n    FILLER_LEFT_TOP_RIGHT_NOTCHES_VARIANT_B = \"airship_8\"\r\n}","export enum RotationAngle {\r\n    UPRIGHT = 0,\r\n    CLOCKWISE = 90,\r\n    UPSIDE_DOWN = 180,\r\n    COUNTER_CLOCKWISE = 270\r\n};","export enum GravityState {\r\n    FIXED = \"0\",\r\n    FLOAT = \"1\",\r\n    FALL = \"2\"\r\n};","export enum IfOperator {\r\n    GREATER_THAN = \">\",\r\n    EQUAL = \"=\"\r\n};","import { Js2tronic } from \"./class/Js2tronic\";\r\n\r\nimport { Stuffable } from \"./enum/Stuffable\";\r\nimport { CartridgeVariant } from \"./enum/CartridgeVariant\";\r\nimport { DesertVariant } from \"./enum/DesertVariant\";\r\nimport { DirtVariant } from \"./enum/DirtVariant\";\r\nimport { MoonVariant } from \"./enum/MoonVariant\";\r\nimport { OneWayVariant } from \"./enum/OneWayVariant\";\r\nimport { RobotVariant } from \"./enum/RobotVariant\";\r\nimport { SaurusVariant } from \"./enum/SaurusVariant\";\r\nimport { ShipVariant } from \"./enum/ShipVariant\";\r\nimport { RotationAngle } from \"./enum/RotationAngle\";\r\nimport { GravityState } from \"./enum/GravityState\";\r\nimport { IfOperator } from \"./enum/IfOperator\";\r\nimport { Tronic } from \"./class/Tronic\";\r\n\r\nconsole.log(GravityState.FALL);\r\nconst j2t: Js2tronic = new Js2tronic();\r\nconsole.log(j2t);\r\nlet test = j2t.block.BrickBlue();\r\nconsole.log(test);\r\ntest.pushToBackground().stuffWith(Stuffable.GRUBBY);\r\nconsole.log(test);\r\nlet cartrdige = j2t.block.Cartridge();\r\ncartrdige.spriteVariant(CartridgeVariant.FLOOR);\r\nconsole.log(cartrdige);\r\nlet desert = j2t.block.Desert();\r\ndesert.spriteVariant(DesertVariant.TOP_ORANGE);\r\nconsole.log(desert);\r\nlet dirt = j2t.block.Dirt();\r\ndirt.spriteVariant(DirtVariant.TOP_LONG);\r\nconsole.log(dirt);\r\nlet moon = j2t.block.Moon();\r\nmoon.spriteVariant(MoonVariant.TOP_BUMP);\r\nconsole.log(moon);\r\nlet oneWay = j2t.block.OneWay();\r\noneWay.spriteVariant(OneWayVariant.FILLER);\r\nconsole.log(oneWay);\r\nlet robot = j2t.block.Robot();\r\nrobot.spriteVariant(RobotVariant.BOTTOM_LEFT_CORNER);\r\nconsole.log(robot);\r\nlet saurus = j2t.block.Saurus();\r\nsaurus.spriteVariant(SaurusVariant.FILLER_THREE_SCALES);\r\nconsole.log(saurus);\r\nlet ship = j2t.block.Ship();\r\nship.spriteVariant(ShipVariant.FILLER_LEFT_TOP_RIGHT_NOTCHES_VARIANT_A);\r\nconsole.log(ship);\r\nlet fertbox = j2t.block.FertBox();\r\nfertbox.rotate(RotationAngle.UPSIDE_DOWN);\r\nconsole.log(fertbox);\r\nlet gravBlock = j2t.block.GravityBlock();\r\ngravBlock.label(\"test label\").pushToBackground();\r\nconsole.log(gravBlock);\r\nconsole.log(gravBlock.tronicnum);\r\nlet iceblock = j2t.block.IceBlock();\r\nconsole.log(iceblock);\r\niceblock.stuffWith(Stuffable.GRUBBY);\r\nconsole.log(iceblock);\r\nlet InvisableBlock = j2t.block.InvisableBlock();\r\nInvisableBlock.rotate(RotationAngle.COUNTER_CLOCKWISE).stuffWith(Stuffable.BOOT);\r\nconsole.log(InvisableBlock);\r\nlet KaizoBlock = j2t.block.KaizoBlock();\r\nKaizoBlock.rotate(RotationAngle.COUNTER_CLOCKWISE).stuffWith(Stuffable.BOOT);\r\nconsole.log(KaizoBlock);\r\nlet MetalBlock = j2t.block.MetalBlock();\r\nMetalBlock;\r\nconsole.log(MetalBlock);\r\nlet QuestionBlock = j2t.block.QuestionBlock();\r\nQuestionBlock.rotate(RotationAngle.COUNTER_CLOCKWISE).stuffWith(Stuffable.BOOT);\r\nconsole.log(QuestionBlock);\r\nlet FloatBlock = j2t.block.FloatBlock();\r\nFloatBlock.rotate(RotationAngle.COUNTER_CLOCKWISE);\r\nconsole.log(FloatBlock);\r\nlet ChainBend = j2t.block.ChainBend();\r\nChainBend.pushToBackground().rotate(RotationAngle.COUNTER_CLOCKWISE);\r\nconsole.log(ChainBend);\r\nlet Door = j2t.block.Door();\r\nDoor.label(\"test label door\");\r\nconsole.log(Door);\r\nconsole.log(\"======[ V Tronics V ]======\");\r\nconsole.log(gravBlock);\r\nlet TronicDelay = j2t.tronic.TronicDelay();\r\nTronicDelay.flowTo(gravBlock).delayInSeconds(gravBlock);\r\nconsole.log(TronicDelay);\r\nTronicDelay.x(3);\r\nconsole.log(TronicDelay);\r\nTronicDelay.y(47);\r\nconsole.log(TronicDelay);\r\nTronicDelay.z(200);\r\nconsole.log(TronicDelay);\r\nlet TronicIf = j2t.tronic.TronicIf();\r\nTronicIf.pushToBackground().rotate(RotationAngle.CLOCKWISE).trueFlowTo(gravBlock).falseFlowTo(gravBlock).a(gravBlock).b(gravBlock).groupTo(gravBlock).ifOperator(IfOperator.EQUAL);\r\nconsole.log(TronicIf);","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}