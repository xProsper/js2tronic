{"version":3,"sources":["class/Entity.ts","class/Block.ts","class/Tronic.ts","class/Monster.ts","class/Item.ts","class/Js2tronic.ts","enum/Stuffable.ts","enum/CartridgeVariant.ts","enum/DesertVariant.ts","enum/DirtVariant.ts","enum/MoonVariant.ts","enum/OneWayVariant.ts","enum/RobotVariant.ts","enum/SaurusVariant.ts","enum/ShipVariant.ts","enum/RotationAngle.ts","index.ts"],"names":[],"mappings":";AAqCa,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IArCb,IAAA,EAAA,WAYA,OANI,WACS,KAAA,EAAI,EACJ,KAAA,EAAI,EACJ,KAAA,EAAI,EACJ,KAAA,EAAI,GAVjB,GAcA,EAAA,WAOA,OAPA,aAAA,GASA,EAAA,WAYA,OAXI,SAAa,EAAoB,EAAoB,GAC5C,GAAc,IAAd,OAAO,IAA0B,IAAd,OAAO,IAA0B,IAAd,OAAO,GACvC,OAAA,OAAO,GAEd,GAAc,IAAd,OAAO,GAAU,CACb,IAAA,EAAW,MAAQ,OAAO,GAEvB,OADP,EAAI,EAAQ,UAAU,EAAQ,OAAS,GAChC,OAAO,GAAK,OAAO,GAEvB,OAAA,OAAO,GAAK,OAAO,OAAO,GAAK,OAAO,KAVrD,GAAa,QAAA,UAAA,EAcb,IAAA,EAAA,WAgCA,OANI,WACS,KAAA,KAAO,KAAK,YAAY,KACxB,KAAA,SAAW,IAAI,GA5B5B,GAAa,QAAA,OAAA;;AC6Pb,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAlSA,IAAA,EAAA,QAAA,YAGA,EAAA,WAAA,SAAA,KAqDA,OApDI,EAAA,UAAA,UAAA,WAAiC,OAAA,IAAI,GACrC,EAAA,UAAA,UAAA,WAAiC,OAAA,IAAI,GACrC,EAAA,UAAA,WAAA,WAAmC,OAAA,IAAI,GACvC,EAAA,UAAA,SAAA,WAA+B,OAAA,IAAI,GACnC,EAAA,UAAA,SAAA,WAA+B,OAAA,IAAI,GACnC,EAAA,UAAA,aAAA,WAAuC,OAAA,IAAI,GAC3C,EAAA,UAAA,UAAA,WAAiC,OAAA,IAAI,GACrC,EAAA,UAAA,OAAA,WAA2B,OAAA,IAAI,GAC/B,EAAA,UAAA,KAAA,WAAuB,OAAA,IAAI,GAC3B,EAAA,UAAA,KAAA,WAAuB,OAAA,IAAI,GAC3B,EAAA,UAAA,OAAA,WAA2B,OAAA,IAAI,GAC/B,EAAA,UAAA,MAAA,WAAyB,OAAA,IAAI,GAC7B,EAAA,UAAA,OAAA,WAA2B,OAAA,IAAI,GAC/B,EAAA,UAAA,KAAA,WAAuB,OAAA,IAAI,GAC3B,EAAA,UAAA,YAAA,WAAqC,OAAA,IAAI,GACzC,EAAA,UAAA,eAAA,WAA2C,OAAA,IAAI,GAC/C,EAAA,UAAA,IAAA,WAAqB,OAAA,IAAI,GACzB,EAAA,UAAA,UAAA,WAAiC,OAAA,IAAI,GACrC,EAAA,UAAA,QAAA,WAA6B,OAAA,IAAI,GACjC,EAAA,UAAA,aAAA,WAAuC,OAAA,IAAI,GAC3C,EAAA,UAAA,SAAA,WAA+B,OAAA,IAAI,GACnC,EAAA,UAAA,eAAA,WAA2C,OAAA,IAAI,GAC/C,EAAA,UAAA,WAAA,WAAmC,OAAA,IAAI,GACvC,EAAA,UAAA,WAAA,WAAmC,OAAA,IAAI,GACvC,EAAA,UAAA,cAAA,WAAyC,OAAA,IAAI,GAC7C,EAAA,UAAA,WAAA,WAAmC,OAAA,IAAI,GACvC,EAAA,UAAA,YAAA,WAAqC,OAAA,IAAI,GACzC,EAAA,UAAA,MAAA,WAAyB,OAAA,IAAI,GAC7B,EAAA,UAAA,UAAA,WAAiC,OAAA,IAAI,GACrC,EAAA,UAAA,KAAA,WAAuB,OAAA,IAAI,GAC3B,EAAA,UAAA,QAAA,WAA6B,OAAA,IAAI,GACjC,EAAA,UAAA,SAAA,WAA+B,OAAA,IAAI,GACnC,EAAA,UAAA,WAAA,WAAmC,OAAA,IAAI,GACvC,EAAA,UAAA,MAAA,WAAyB,OAAA,IAAI,GAC7B,EAAA,UAAA,OAAA,WAA2B,OAAA,IAAI,GAC/B,EAAA,UAAA,MAAA,WAAyB,OAAA,IAAI,GAC7B,EAAA,UAAA,aAAA,WAAuC,OAAA,IAAI,GAC3C,EAAA,UAAA,UAAA,WAAiC,OAAA,IAAI,GACrC,EAAA,UAAA,SAAA,WAA+B,OAAA,IAAI,GACnC,EAAA,UAAA,UAAA,WAAiC,OAAA,IAAI,GACrC,EAAA,UAAA,WAAA,WAAmC,OAAA,IAAI,GACvC,EAAA,UAAA,KAAA,WAAuB,OAAA,IAAI,GAC3B,EAAA,UAAA,OAAA,WAA2B,OAAA,IAAI,GAC/B,EAAA,UAAA,MAAA,WAAyB,OAAA,IAAI,GAC7B,EAAA,UAAA,UAAA,WAAiC,OAAA,IAAI,GACrC,EAAA,UAAA,cAAA,WAAyC,OAAA,IAAI,GAC7C,EAAA,UAAA,UAAA,WAAiC,OAAA,IAAI,GACrC,EAAA,UAAA,QAAA,WAA6B,OAAA,IAAI,GACjC,EAAA,UAAA,UAAA,WAAiC,OAAA,IAAI,GACrC,EAAA,UAAA,WAAA,WAAmC,OAAA,IAAI,GACvC,EAAA,UAAA,UAAA,WAAiC,OAAA,IAAI,GACrC,EAAA,UAAA,eAAA,WAA2C,OAAA,IAAI,IACnD,EArDA,GAAa,QAAA,MAAA,EAuDb,IAAA,EAAA,SAAA,GAAA,SAAA,IAwOA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KApOA,OAJwB,EAAA,EAAA,GACpB,EAAA,UAAA,iBAAA,WAA2D,OAAtB,KAAA,QAAS,EAAa,MAC3D,EAAA,UAAA,QAAA,SAAS,GAAmE,OAA1B,KAAA,MAAQ,EAAkB,MAC5E,EAAA,UAAA,UAAA,SAAW,GAAkE,OAA5B,KAAA,QAAU,EAAkB,MACjF,EAJA,CAAwB,EAAA,QAMxB,EAAA,SAAA,GAAA,SAAA,IAkOA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KA/NA,OAHwB,EAAA,EAAA,GACpB,EAAA,UAAA,QAAA,SAAS,GAAmE,OAA1B,KAAA,MAAQ,EAAkB,MAC5E,EAAA,UAAA,UAAA,SAAW,GAAkE,OAA5B,KAAA,QAAU,EAAkB,MACjF,EAHA,CAAwB,EAAA,QAKxB,EAAA,SAAA,GAAA,SAAA,IA6NA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAzNA,OAJyB,EAAA,EAAA,GACrB,EAAA,UAAA,iBAAA,WAA4D,OAAtB,KAAA,QAAS,EAAa,MAC5D,EAAA,UAAA,QAAA,SAAS,GAAoE,OAA1B,KAAA,MAAQ,EAAkB,MAC7E,EAAA,UAAA,UAAA,SAAW,GAAmE,OAA5B,KAAA,QAAU,EAAkB,MAClF,EAJA,CAAyB,EAAA,QAMzB,EAAA,SAAA,GAAA,SAAA,IAuNA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAnNA,OAJuB,EAAA,EAAA,GACnB,EAAA,UAAA,iBAAA,WAA0D,OAAtB,KAAA,QAAS,EAAa,MAC1D,EAAA,UAAA,QAAA,SAAS,GAAkE,OAA1B,KAAA,MAAQ,EAAkB,MAC3E,EAAA,UAAA,UAAA,SAAW,GAAiE,OAA5B,KAAA,QAAU,EAAkB,MAChF,EAJA,CAAuB,EAAA,QAMvB,EAAA,SAAA,GAAA,SAAA,IAiNA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KA7MA,OAJuB,EAAA,EAAA,GACnB,EAAA,UAAA,iBAAA,WAA0D,OAAtB,KAAA,QAAS,EAAa,MAC1D,EAAA,UAAA,QAAA,SAAS,GAAkE,OAA1B,KAAA,MAAQ,EAAkB,MAC3E,EAAA,UAAA,UAAA,SAAW,GAAiE,OAA5B,KAAA,QAAU,EAAkB,MAChF,EAJA,CAAuB,EAAA,QAMvB,EAAA,SAAA,GAAA,SAAA,IA2MA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAzMA,OAF2B,EAAA,EAAA,GACvB,EAAA,UAAA,QAAA,SAAS,GAAsE,OAA1B,KAAA,MAAQ,EAAkB,MACnF,EAFA,CAA2B,EAAA,QAI3B,EAAA,SAAA,GAAA,SAAA,IAuMA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAnMA,OAJwB,EAAA,EAAA,GACpB,EAAA,UAAA,iBAAA,WAA2D,OAAtB,KAAA,QAAS,EAAa,MAC3D,EAAA,UAAA,QAAA,SAAS,GAAmE,OAA1B,KAAA,MAAQ,EAAkB,MAC5E,EAAA,UAAA,cAAA,SAAe,GAAiG,OAAtD,IAAuB,KAAA,KAAO,GAAwB,MACpH,EAJA,CAAwB,EAAA,QAMxB,EAAA,SAAA,GAAA,SAAA,IAiMA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KA7LA,OAJqB,EAAA,EAAA,GACjB,EAAA,UAAA,iBAAA,WAAwD,OAAtB,KAAA,QAAS,EAAa,MACxD,EAAA,UAAA,QAAA,SAAS,GAAgE,OAA1B,KAAA,MAAQ,EAAkB,MACzE,EAAA,UAAA,cAAA,SAAe,GAA8F,OAAtD,IAAuB,KAAA,KAAO,GAAwB,MACjH,EAJA,CAAqB,EAAA,QAMrB,EAAA,SAAA,GAAA,SAAA,IA2LA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAvLA,OAJmB,EAAA,EAAA,GACf,EAAA,UAAA,iBAAA,WAAsD,OAAtB,KAAA,QAAS,EAAa,MACtD,EAAA,UAAA,QAAA,SAAS,GAA8D,OAA1B,KAAA,MAAQ,EAAkB,MACvE,EAAA,UAAA,cAAA,SAAe,GAA4F,OAAtD,IAAuB,KAAA,KAAO,GAAwB,MAC/G,EAJA,CAAmB,EAAA,QAMnB,EAAA,SAAA,GAAA,SAAA,IAqLA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAjLA,OAJmB,EAAA,EAAA,GACf,EAAA,UAAA,iBAAA,WAAsD,OAAtB,KAAA,QAAS,EAAa,MACtD,EAAA,UAAA,QAAA,SAAS,GAA8D,OAA1B,KAAA,MAAQ,EAAkB,MACvE,EAAA,UAAA,cAAA,SAAe,GAA4F,OAAtD,IAAuB,KAAA,KAAO,GAAwB,MAC/G,EAJA,CAAmB,EAAA,QAMnB,EAAA,SAAA,GAAA,SAAA,IA+KA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KA5KA,OAHqB,EAAA,EAAA,GACjB,EAAA,UAAA,iBAAA,WAAwD,OAAtB,KAAA,QAAS,EAAa,MACxD,EAAA,UAAA,cAAA,SAAe,GAA8F,OAAtD,IAAuB,KAAA,KAAO,GAAwB,MACjH,EAHA,CAAqB,EAAA,QAKrB,EAAA,SAAA,GAAA,SAAA,IA0KA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAtKA,OAJoB,EAAA,EAAA,GAChB,EAAA,UAAA,iBAAA,WAAuD,OAAtB,KAAA,QAAS,EAAa,MACvD,EAAA,UAAA,QAAA,SAAS,GAA+D,OAA1B,KAAA,MAAQ,EAAkB,MACxE,EAAA,UAAA,cAAA,SAAe,GAA6F,OAAtD,IAAuB,KAAA,KAAO,GAAwB,MAChH,EAJA,CAAoB,EAAA,QAMpB,EAAA,SAAA,GAAA,SAAA,IAoKA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAhKA,OAJqB,EAAA,EAAA,GACjB,EAAA,UAAA,iBAAA,WAAwD,OAAtB,KAAA,QAAS,EAAa,MACxD,EAAA,UAAA,QAAA,SAAS,GAAgE,OAA1B,KAAA,MAAQ,EAAkB,MACzE,EAAA,UAAA,cAAA,SAAe,GAA8F,OAAtD,IAAuB,KAAA,KAAO,GAAwB,MACjH,EAJA,CAAqB,EAAA,QAMrB,EAAA,SAAA,GAAA,SAAA,IA8JA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KA1JA,OAJmB,EAAA,EAAA,GACf,EAAA,UAAA,iBAAA,WAAsD,OAAtB,KAAA,QAAS,EAAa,MACtD,EAAA,UAAA,QAAA,SAAS,GAA8D,OAA1B,KAAA,MAAQ,EAAkB,MACvE,EAAA,UAAA,cAAA,SAAe,GAA4F,OAAtD,IAAuB,KAAA,KAAO,GAAwB,MAC/G,EAJA,CAAmB,EAAA,QAMnB,EAAA,SAAA,GAAA,SAAA,IAwJA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAtJA,OAF0B,EAAA,EAAA,GACtB,EAAA,UAAA,QAAA,SAAS,GAAqE,OAA1B,KAAA,MAAQ,EAAkB,MAClF,EAFA,CAA0B,EAAA,QAI1B,EAAA,SAAA,GAAA,SAAA,IAoJA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAhJA,OAJ6B,EAAA,EAAA,GACzB,EAAA,UAAA,iBAAA,WAAgE,OAAtB,KAAA,QAAS,EAAa,MAChE,EAAA,UAAA,QAAA,SAAS,GAAwE,OAA1B,KAAA,MAAQ,EAAkB,MACjF,EAAA,UAAA,UAAA,SAAW,GAAuE,OAA5B,KAAA,QAAU,EAAkB,MACtF,EAJA,CAA6B,EAAA,QAM7B,EAAA,SAAA,GAAA,SAAA,IA8IA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KA5IA,OAFkB,EAAA,EAAA,GACd,EAAA,UAAA,QAAA,SAAS,GAA6D,OAA1B,KAAA,MAAQ,EAAkB,MAC1E,EAFA,CAAkB,EAAA,QAIlB,EAAA,SAAA,GAAA,SAAA,IA0IA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAxIA,OAFwB,EAAA,EAAA,GAExB,EAFA,CAAwB,EAAA,QAIxB,EAAA,SAAA,GAAA,SAAA,IAsIA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAlIA,OAJsB,EAAA,EAAA,GAClB,EAAA,UAAA,SAAA,SAAU,GAAoE,OAA3B,KAAA,SAAS,EAAI,EAAc,MAC9E,EAAA,UAAA,QAAA,SAAS,GAAiE,OAA1B,KAAA,MAAQ,EAAkB,MAC1E,EAAA,UAAA,UAAA,SAAW,GAAgE,OAA5B,KAAA,QAAU,EAAkB,MAC/E,EAJA,CAAsB,EAAA,QAMtB,EAAA,SAAA,GAAA,SAAA,IAgIA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KA9HA,OAF2B,EAAA,EAAA,GAE3B,EAFA,CAA2B,EAAA,QAI3B,EAAA,SAAA,GAAA,SAAA,IA4HA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KA1HA,OAFuB,EAAA,EAAA,GAEvB,EAFA,CAAuB,EAAA,QAIvB,EAAA,SAAA,GAAA,SAAA,IAwHA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAtHA,OAF6B,EAAA,EAAA,GAE7B,EAFA,CAA6B,EAAA,QAI7B,EAAA,SAAA,GAAA,SAAA,IAoHA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAlHA,OAFyB,EAAA,EAAA,GAEzB,EAFA,CAAyB,EAAA,QAIzB,EAAA,SAAA,GAAA,SAAA,IAgHA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KA9GA,OAFyB,EAAA,EAAA,GAEzB,EAFA,CAAyB,EAAA,QAIzB,EAAA,SAAA,GAAA,SAAA,IA4GA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KA1GA,OAF4B,EAAA,EAAA,GAE5B,EAFA,CAA4B,EAAA,QAI5B,EAAA,SAAA,GAAA,SAAA,IAwGA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAtGA,OAFyB,EAAA,EAAA,GAEzB,EAFA,CAAyB,EAAA,QAIzB,EAAA,SAAA,GAAA,SAAA,IAoGA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAlGA,OAF0B,EAAA,EAAA,GAE1B,EAFA,CAA0B,EAAA,QAI1B,EAAA,SAAA,GAAA,SAAA,IAgGA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KA9FA,OAFoB,EAAA,EAAA,GAEpB,EAFA,CAAoB,EAAA,QAIpB,EAAA,SAAA,GAAA,SAAA,IA4FA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KA1FA,OAFwB,EAAA,EAAA,GAExB,EAFA,CAAwB,EAAA,QAIxB,EAAA,SAAA,GAAA,SAAA,IAwFA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAtFA,OAFmB,EAAA,EAAA,GAEnB,EAFA,CAAmB,EAAA,QAInB,EAAA,SAAA,GAAA,SAAA,IAoFA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAlFA,OAFsB,EAAA,EAAA,GAEtB,EAFA,CAAsB,EAAA,QAItB,EAAA,SAAA,GAAA,SAAA,IAgFA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KA9EA,OAFuB,EAAA,EAAA,GAEvB,EAFA,CAAuB,EAAA,QAIvB,EAAA,SAAA,GAAA,SAAA,IA4EA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KA1EA,OAFyB,EAAA,EAAA,GAEzB,EAFA,CAAyB,EAAA,QAIzB,EAAA,SAAA,GAAA,SAAA,IAwEA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAtEA,OAFoB,EAAA,EAAA,GAEpB,EAFA,CAAoB,EAAA,QAIpB,EAAA,SAAA,GAAA,SAAA,IAoEA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAlEA,OAFqB,EAAA,EAAA,GAErB,EAFA,CAAqB,EAAA,QAIrB,EAAA,SAAA,GAAA,SAAA,IAgEA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KA9DA,OAFoB,EAAA,EAAA,GAEpB,EAFA,CAAoB,EAAA,QAIpB,EAAA,SAAA,GAAA,SAAA,IA4DA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KA1DA,OAF2B,EAAA,EAAA,GAE3B,EAFA,CAA2B,EAAA,QAI3B,EAAA,SAAA,GAAA,SAAA,IAwDA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAtDA,OAFwB,EAAA,EAAA,GAExB,EAFA,CAAwB,EAAA,QAIxB,EAAA,SAAA,GAAA,SAAA,IAoDA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAlDA,OAFuB,EAAA,EAAA,GAEvB,EAFA,CAAuB,EAAA,QAIvB,EAAA,SAAA,GAAA,SAAA,IAgDA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KA9CA,OAFwB,EAAA,EAAA,GAExB,EAFA,CAAwB,EAAA,QAIxB,EAAA,SAAA,GAAA,SAAA,IA4CA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KA1CA,OAFyB,EAAA,EAAA,GAEzB,EAFA,CAAyB,EAAA,QAIzB,EAAA,SAAA,GAAA,SAAA,IAwCA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAtCA,OAFmB,EAAA,EAAA,GAEnB,EAFA,CAAmB,EAAA,QAInB,EAAA,SAAA,GAAA,SAAA,IAoCA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAlCA,OAFqB,EAAA,EAAA,GAErB,EAFA,CAAqB,EAAA,QAIrB,EAAA,SAAA,GAAA,SAAA,IAgCA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KA9BA,OAFoB,EAAA,EAAA,GAEpB,EAFA,CAAoB,EAAA,QAIpB,EAAA,SAAA,GAAA,SAAA,IA4BA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KA1BA,OAFwB,EAAA,EAAA,GAExB,EAFA,CAAwB,EAAA,QAIxB,EAAA,SAAA,GAAA,SAAA,IAwBA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAtBA,OAF4B,EAAA,EAAA,GAE5B,EAFA,CAA4B,EAAA,QAI5B,EAAA,SAAA,GAAA,SAAA,IAoBA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAlBA,OAFwB,EAAA,EAAA,GAExB,EAFA,CAAwB,EAAA,QAIxB,EAAA,SAAA,GAAA,SAAA,IAgBA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAdA,OAFsB,EAAA,EAAA,GAEtB,EAFA,CAAsB,EAAA,QAItB,EAAA,SAAA,GAAA,SAAA,IAYA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAVA,OAFwB,EAAA,EAAA,GAExB,EAFA,CAAwB,EAAA,QAIxB,EAAA,SAAA,GAAA,SAAA,IAQA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KANA,OAFyB,EAAA,EAAA,GAEzB,EAFA,CAAyB,EAAA,QAIzB,EAAA,SAAA,GAAA,SAAA,IAIA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAFA,OAFwB,EAAA,EAAA,GAExB,EAFA,CAAwB,EAAA,QAIxB,GAAA,SAAA,GAAA,SAAA,IAAA,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAEA,OAF6B,EAAA,EAAA,GAE7B,EAFA,CAA6B,EAAA;;AChShB,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAFb,IAAA,EAAA,QAAA,YAEA,EAAA,SAAA,GAAA,SAAA,IAAa,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAEb,OAF4B,EAAA,EAAA,GAE5B,EAFA,CAA4B,EAAA,QAAf,QAAA,OAAA;;ACAA,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAFb,IAAA,EAAA,QAAA,YAEA,EAAA,SAAA,GAAA,SAAA,IAAa,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAEb,OAF6B,EAAA,EAAA,GAE7B,EAFA,CAA6B,EAAA,QAAhB,QAAA,QAAA;;ACAA,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,WAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,OAAA,SAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,IAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAFb,IAAA,EAAA,QAAA,YAEA,EAAA,SAAA,GAAA,SAAA,IAAa,OAAA,OAAA,GAAA,EAAA,MAAA,KAAA,YAAA,KAEb,OAF0B,EAAA,EAAA,GAE1B,EAFA,CAA0B,EAAA,QAAb,QAAA,KAAA;;ACGA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IALb,IAAA,EAAA,QAAA,WACA,EAAA,QAAA,YACA,EAAA,QAAA,aACA,EAAA,QAAA,UAEA,EAAA,WAWA,OANI,WACS,KAAA,MAAQ,IAAI,EAAA,MACZ,KAAA,OAAS,IAAI,EAAA,OACb,KAAA,QAAU,IAAI,EAAA,QACd,KAAA,KAAO,IAAI,EAAA,MATxB,GAAa,QAAA,UAAA;;AC4CZ,aAjDD,IAAY,EAiDX,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAjDD,SAAY,GACR,EAAA,KAAA,OACA,EAAA,QAAA,UACA,EAAA,UAAA,YACA,EAAA,WAAA,aACA,EAAA,aAAA,eACA,EAAA,WAAA,aACA,EAAA,SAAA,WACA,EAAA,SAAA,WACA,EAAA,KAAA,OACA,EAAA,UAAA,YACA,EAAA,WAAA,aACA,EAAA,gBAAA,kBACA,EAAA,OAAA,SACA,EAAA,QAAA,UACA,EAAA,YAAA,cACA,EAAA,WAAA,aACA,EAAA,OAAA,SACA,EAAA,eAAA,iBACA,EAAA,UAAA,YACA,EAAA,QAAA,UACA,EAAA,MAAA,QACA,EAAA,SAAA,WACA,EAAA,eAAA,iBACA,EAAA,YAAA,cACA,EAAA,UAAA,YACA,EAAA,MAAA,QACA,EAAA,SAAA,WACA,EAAA,KAAA,OACA,EAAA,MAAA,QACA,EAAA,UAAA,YACA,EAAA,MAAA,QACA,EAAA,WAAA,aACA,EAAA,cAAA,gBACA,EAAA,UAAA,YACA,EAAA,KAAA,OACA,EAAA,aAAA,eACA,EAAA,OAAA,SACA,EAAA,SAAA,WACA,EAAA,SAAA,WACA,EAAA,IAAA,MACA,EAAA,YAAA,cACA,EAAA,UAAA,YACA,EAAA,QAAA,UACA,EAAA,WAAA,aACA,EAAA,KAAA,OACA,EAAA,UAAA,YACA,EAAA,MAAA,QACA,EAAA,WAAA,aAhDJ,CAAY,EAAA,QAAA,YAAA,QAAA,UAAS;;ACArB,aAAA,IAAY,EAAZ,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,SAAY,GACR,EAAA,MAAA,cACA,EAAA,OAAA,cACA,EAAA,QAAA,cAHJ,CAAY,EAAA,QAAA,mBAAA,QAAA,iBAAgB;;ACA5B,aAAA,IAAY,EAAZ,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,SAAY,GACR,EAAA,gBAAA,WACA,EAAA,gBAAA,WACA,EAAA,iBAAA,WACA,EAAA,OAAA,WACA,EAAA,UAAA,WACA,EAAA,WAAA,WACA,EAAA,mBAAA,WACA,EAAA,OAAA,WACA,EAAA,oBAAA,WATJ,CAAY,EAAA,QAAA,gBAAA,QAAA,cAAa;;ACAzB,aAAA,IAAY,EAAZ,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,SAAY,GACR,EAAA,SAAA,WACA,EAAA,UAAA,WACA,EAAA,iBAAA,WACA,EAAA,gBAAA,WACA,EAAA,OAAA,WACA,EAAA,iBAAA,WACA,EAAA,mBAAA,WACA,EAAA,YAAA,WACA,EAAA,aAAA,WATJ,CAAY,EAAA,QAAA,cAAA,QAAA,YAAW;;ACAvB,aAAA,IAAY,EAAZ,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,SAAY,GACR,EAAA,SAAA,SACA,EAAA,SAAA,SACA,EAAA,iBAAA,SACA,EAAA,gBAAA,SACA,EAAA,OAAA,SACA,EAAA,oBAAA,SACA,EAAA,kBAAA,SACA,EAAA,YAAA,SACA,EAAA,aAAA,SATJ,CAAY,EAAA,QAAA,cAAA,QAAA,YAAW;;ACAvB,aAAA,IAAY,EAAZ,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,SAAY,GACR,EAAA,gBAAA,aACA,EAAA,iBAAA,aACA,EAAA,oBAAA,aACA,EAAA,mBAAA,aACA,EAAA,IAAA,aACA,EAAA,OAAA,aACA,EAAA,OAAA,aAPJ,CAAY,EAAA,QAAA,gBAAA,QAAA,cAAa;;ACAzB,aAAA,IAAY,EAAZ,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,SAAY,GACR,EAAA,WAAA,eACA,EAAA,IAAA,eACA,EAAA,iBAAA,eACA,EAAA,gBAAA,eACA,EAAA,OAAA,eACA,EAAA,cAAA,eACA,EAAA,mBAAA,eACA,EAAA,OAAA,eACA,EAAA,oBAAA,eATJ,CAAY,EAAA,QAAA,eAAA,QAAA,aAAY;;ACAxB,aAAA,IAAY,EAAZ,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,SAAY,GACR,EAAA,gBAAA,WACA,EAAA,IAAA,WACA,EAAA,iBAAA,WACA,EAAA,oBAAA,WACA,EAAA,iBAAA,WACA,EAAA,kBAAA,WACA,EAAA,mBAAA,WACA,EAAA,OAAA,WACA,EAAA,oBAAA,WATJ,CAAY,EAAA,QAAA,gBAAA,QAAA,cAAa;;ACAzB,aAAA,IAAY,EAAZ,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,SAAY,GACR,EAAA,WAAA,YACA,EAAA,OAAA,YACA,EAAA,oBAAA,YACA,EAAA,mBAAA,YACA,EAAA,qBAAA,YACA,EAAA,mBAAA,YACA,EAAA,SAAA,YACA,EAAA,wCAAA,YACA,EAAA,wCAAA,YATJ,CAAY,EAAA,QAAA,cAAA,QAAA,YAAW;;ACKtB,aALD,IAAY,EAKX,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IALD,SAAY,GACR,EAAA,EAAA,QAAA,GAAA,UACA,EAAA,EAAA,UAAA,IAAA,YACA,EAAA,EAAA,YAAA,KAAA,cACA,EAAA,EAAA,kBAAA,KAAA,oBAJJ,CAAY,EAAA,QAAA,gBAAA,QAAA,cAAa;;AC8CzB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA9CA,IAAA,EAAA,QAAA,qBAEA,EAAA,QAAA,oBACA,EAAA,QAAA,2BACA,EAAA,QAAA,wBACA,EAAA,QAAA,sBACA,EAAA,QAAA,sBACA,EAAA,QAAA,wBACA,EAAA,QAAA,uBACA,EAAA,QAAA,wBACA,EAAA,QAAA,sBACA,EAAA,QAAA,wBAGM,EAAiB,IAAI,EAAA,UAC3B,QAAQ,IAAI,GACZ,IAAI,EAAO,EAAI,MAAM,YACrB,QAAQ,IAAI,GACZ,EAAK,mBAAmB,QAAQ,QAAQ,UAAU,EAAA,UAAU,QAC5D,QAAQ,IAAI,GACZ,IAAI,EAAY,EAAI,MAAM,YAC1B,EAAU,cAAc,EAAA,iBAAiB,OACzC,QAAQ,IAAI,GACZ,IAAI,EAAS,EAAI,MAAM,SACvB,EAAO,cAAc,EAAA,cAAc,YACnC,QAAQ,IAAI,GACZ,IAAI,EAAO,EAAI,MAAM,OACrB,EAAK,cAAc,EAAA,YAAY,UAC/B,QAAQ,IAAI,GACZ,IAAI,EAAO,EAAI,MAAM,OACrB,EAAK,cAAc,EAAA,YAAY,UAC/B,QAAQ,IAAI,GACZ,IAAI,EAAS,EAAI,MAAM,SACvB,EAAO,cAAc,EAAA,cAAc,QACnC,QAAQ,IAAI,GACZ,IAAI,EAAQ,EAAI,MAAM,QACtB,EAAM,cAAc,EAAA,aAAa,oBACjC,QAAQ,IAAI,GACZ,IAAI,EAAS,EAAI,MAAM,SACvB,EAAO,cAAc,EAAA,cAAc,qBACnC,QAAQ,IAAI,GACZ,IAAI,EAAO,EAAI,MAAM,OACrB,EAAK,cAAc,EAAA,YAAY,yCAC/B,QAAQ,IAAI,GACZ,IAAI,EAAU,EAAI,MAAM,UACxB,EAAQ,SAAS,EAAA,cAAc,aAC/B,QAAQ,IAAI","file":"src.c6ddc3e6.js","sourceRoot":"..\\src","sourcesContent":["class Position {\r\n    x: string | number;\r\n    y: string | number;\r\n    z: string | number;\r\n    d: string | number;\r\n\r\n    constructor () {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0; // one of 000, 100, 200\r\n        this.d = 0; // one of 0, 90, 180, 270\r\n    }\r\n}\r\n\r\nclass Troniccon {\r\n    fa?: Tronicnum;\r\n    fb?: Tronicnum;\r\n    da?: Tronicnum;\r\n    db?: Tronicnum;\r\n    do?: Tronicnum;\r\n    dz?: Tronicnum;\r\n}\r\n\r\nexport class Tronicnum {\r\n    constructor (x: string | number, y: string | number, z: string | number) {\r\n        if ( Number(x) === 0 && Number(y) === 0 && Number(z) === 0 ) {\r\n            return String(0); // 0\r\n        }\r\n        if (Number(z) === 0) {\r\n            var zeroPad = (\"000\" + String(y));\r\n            y = zeroPad.substring(zeroPad.length - 3);\r\n            return String(x) + String(y); // xxx0yy\r\n        }\r\n        return String(x) + String(Number(y) + Number(z)); // xxxzyy\r\n    }\r\n}\r\n\r\nexport class Entity {\r\n    // Common\r\n    name: string;\r\n    position: Position;\r\n    tronictype?: string;\r\n    pushed?: boolean;\r\n    group?: Tronicnum;\r\n    contain?: string;\r\n    comment?: string;\r\n    text?: string;\r\n    grav?: string | number; // 0 <fixed> | 1 <float> | 2 <fall>\r\n    dir?: string | number; // -1 <counterclockwise> | 1 <clockwise>\r\n    load?: string;\r\n    tronicnum?: Tronicnum; // when used : new Tronicnum(this.position.x, this.position.y, this.position.z)\r\n\r\n    // Block specific\r\n    door?: Tronicnum;\r\n    pipe?: Tronicnum;\r\n    warp?: string;\r\n\r\n    // Tronic specific\r\n    troniccon?: Troniccon;\r\n    calc?: string | number; // undefined <plus> | 1 <minus> | 2 <multiply> | 3 <divide> | 4 <combine> | 5 <modulo> | 6 <exponential> | 7 <percentage>\r\n    if?: string; // \">\" | \"=\"\r\n    bang?: string; // TronicTwitch set bang command\r\n\r\n    constructor () {\r\n        this.name = this.constructor.name;\r\n        this.position = new Position;\r\n    }\r\n\r\n    // TODO Add method to change position\r\n}","import { Entity } from \"./Entity\";\r\nimport { Tronicnum } from \"./Entity\";\r\n\r\nexport class Block {\r\n    BrickBlue() : BrickBlue { return new BrickBlue(); };\r\n    BrickGlow() : BrickGlow { return new BrickGlow(); };\r\n    BrickGreen() : BrickGreen { return new BrickGreen(); };\r\n    BrickOld() : BrickOld { return new BrickOld(); };\r\n    BrickRed() : BrickRed { return new BrickRed(); };\r\n    VirtualBrick() : VirtualBrick { return new VirtualBrick(); };\r\n    Cartridge() : Cartridge { return new Cartridge(); };\r\n    Desert() : Desert { return new Desert(); };\r\n    Dirt() : Dirt { return new Dirt(); };\r\n    Moon() : Moon { return new Moon(); };\r\n    OneWay() : OneWay { return new OneWay(); };\r\n    Robot() : Robot { return new Robot(); };\r\n    Saurus() : Saurus { return new Saurus(); };\r\n    Ship() : Ship { return new Ship(); };\r\n    BounceBlock() : BounceBlock { return new BounceBlock(); };\r\n    ExplosiveBlock() : ExplosiveBlock { return new ExplosiveBlock(); };\r\n    Eye() : Eye { return new Eye(); };\r\n    FallBlock() : FallBlock { return new FallBlock(); };\r\n    FertBox() : FertBox { return new FertBox(); };\r\n    GravityBlock() : GravityBlock { return new GravityBlock(); };\r\n    IceBlock() : IceBlock { return new IceBlock(); };\r\n    InvisableBlock() : InvisableBlock { return new InvisableBlock(); };\r\n    KaizoBlock() : KaizoBlock { return new KaizoBlock(); };\r\n    MetalBlock() : MetalBlock { return new MetalBlock(); };\r\n    QuestionBlock() : QuestionBlock { return new QuestionBlock(); };\r\n    FloatBlock() : FloatBlock { return new FloatBlock(); };\r\n    SpringBlock() : SpringBlock { return new SpringBlock(); };\r\n    Chain() : Chain { return new Chain(); };\r\n    ChainBend() : ChainBend { return new ChainBend(); };\r\n    Door() : Door { return new Door(); };\r\n    EndDoor() : EndDoor { return new EndDoor(); };\r\n    WarpDoor() : WarpDoor { return new WarpDoor(); };\r\n    LavaSquare() : LavaSquare { return new LavaSquare(); };\r\n    Water() : Water { return new Water(); };\r\n    Bushes() : Bushes { return new Bushes(); };\r\n    Cloud() : Cloud { return new Cloud(); };\r\n    Construction() : Construction { return new Construction(); };\r\n    LightBulb() : LightBulb { return new LightBulb(); };\r\n    RampLeft() : RampLeft { return new RampLeft(); };\r\n    RampRight() : RampRight { return new RampRight(); };\r\n    RobotJoint() : RobotJoint { return new RobotJoint(); };\r\n    Sign() : Sign { return new Sign(); };\r\n    Spikes() : Spikes { return new Spikes(); };\r\n    Wheel() : Wheel { return new Wheel(); };\r\n    PipeCurve() : PipeCurve { return new PipeCurve(); };\r\n    PipeExtension() : PipeExtension { return new PipeExtension(); };\r\n    PipeSteam() : PipeSteam { return new PipeSteam(); };\r\n    PipeTop() : PipeTop { return new PipeTop(); };\r\n    PipeWater() : PipeWater { return new PipeWater(); };\r\n    TravelPipe() : TravelPipe { return new TravelPipe(); };\r\n    Treadmill() : Treadmill { return new Treadmill(); };\r\n    TreadmillRight() : TreadmillRight { return new TreadmillRight(); };\r\n}\r\n\r\nclass BrickBlue extends Entity {\r\n    pushToBackground(): BrickBlue { this.pushed = true; return this; }\r\n    groupTo( tronicnum: Tronicnum ): BrickBlue { this.group = tronicnum; return this; }\r\n    stuffWith( stuffable: string ): BrickBlue { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass BrickGlow extends Entity {\r\n    groupTo( tronicNum: Tronicnum ): BrickGlow { this.group = tronicNum; return this; }\r\n    stuffWith( stuffable: string ): BrickGlow { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass BrickGreen extends Entity {\r\n    pushToBackground(): BrickGreen { this.pushed = true; return this; }\r\n    groupTo( tronicnum: Tronicnum ): BrickGreen { this.group = tronicnum; return this; }\r\n    stuffWith( stuffable: string ): BrickGreen { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass BrickOld extends Entity {\r\n    pushToBackground(): BrickOld { this.pushed = true; return this; }\r\n    groupTo( tronicnum: Tronicnum ): BrickOld { this.group = tronicnum; return this; }\r\n    stuffWith( stuffable: string ): BrickOld { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass BrickRed extends Entity {\r\n    pushToBackground(): BrickRed { this.pushed = true; return this; }\r\n    groupTo( tronicnum: Tronicnum ): BrickRed { this.group = tronicnum; return this; }\r\n    stuffWith( stuffable: string ): BrickRed { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass VirtualBrick extends Entity {\r\n    groupTo( tronicnum: Tronicnum ): VirtualBrick { this.group = tronicnum; return this; }\r\n}\r\n\r\nclass Cartridge extends Entity {\r\n    pushToBackground(): Cartridge { this.pushed = true; return this; }\r\n    groupTo( tronicnum: Tronicnum ): Cartridge { this.group = tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Cartridge { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass Desert extends Entity {\r\n    pushToBackground(): Desert { this.pushed = true; return this; }\r\n    groupTo( tronicnum: Tronicnum ): Desert { this.group = tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Desert { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass Dirt extends Entity {\r\n    pushToBackground(): Dirt { this.pushed = true; return this; }\r\n    groupTo( tronicnum: Tronicnum ): Dirt { this.group = tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Dirt { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass Moon extends Entity {\r\n    pushToBackground(): Moon { this.pushed = true; return this; }\r\n    groupTo( tronicnum: Tronicnum ): Moon { this.group = tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Moon { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass OneWay extends Entity {\r\n    pushToBackground(): OneWay { this.pushed = true; return this; }\r\n    spriteVariant( spriteVariant?: string ): OneWay { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass Robot extends Entity {\r\n    pushToBackground(): Robot { this.pushed = true; return this; }\r\n    groupTo( tronicnum: Tronicnum ): Robot { this.group = tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Robot { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass Saurus extends Entity {\r\n    pushToBackground(): Saurus { this.pushed = true; return this; }\r\n    groupTo( tronicnum: Tronicnum ): Saurus { this.group = tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Saurus { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass Ship extends Entity {\r\n    pushToBackground(): Ship { this.pushed = true; return this; }\r\n    groupTo( tronicnum: Tronicnum ): Ship { this.group = tronicnum; return this; }\r\n    spriteVariant( spriteVariant?: string ): Ship { if ( spriteVariant ) { this.load = spriteVariant }; return this; }\r\n}\r\n\r\nclass BounceBlock extends Entity {\r\n    groupTo( tronicnum: Tronicnum ): BounceBlock { this.group = tronicnum; return this; }\r\n}\r\n\r\nclass ExplosiveBlock extends Entity {\r\n    pushToBackground(): ExplosiveBlock { this.pushed = true; return this; }\r\n    groupTo( tronicnum: Tronicnum ): ExplosiveBlock { this.group = tronicnum; return this; }\r\n    stuffWith( stuffable: string ): ExplosiveBlock { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass Eye extends Entity {\r\n    groupTo( tronicnum: Tronicnum ): Eye { this.group = tronicnum; return this; }\r\n}\r\n\r\nclass FallBlock extends Entity {\r\n    // No methods\r\n}\r\n\r\nclass FertBox extends Entity {\r\n    rotateTo( angle: string | number ): FertBox { this.position.d = angle; return this; }\r\n    groupTo( tronicnum: Tronicnum ): FertBox { this.group = tronicnum; return this; }\r\n    stuffWith( stuffable: string ): FertBox { this.contain = stuffable; return this; }\r\n}\r\n\r\nclass GravityBlock extends Entity {\r\n\r\n}\r\n\r\nclass IceBlock extends Entity {\r\n\r\n}\r\n\r\nclass InvisableBlock extends Entity {\r\n\r\n}\r\n\r\nclass KaizoBlock extends Entity {\r\n\r\n}\r\n\r\nclass MetalBlock extends Entity {\r\n\r\n}\r\n\r\nclass QuestionBlock extends Entity {\r\n\r\n}\r\n\r\nclass FloatBlock extends Entity {\r\n\r\n}\r\n\r\nclass SpringBlock extends Entity {\r\n\r\n}\r\n\r\nclass Chain extends Entity {\r\n\r\n}\r\n\r\nclass ChainBend extends Entity {\r\n// name: \"Chain Bend\"\r\n}\r\n\r\nclass Door extends Entity {\r\n\r\n}\r\n\r\nclass EndDoor extends Entity {\r\n\r\n}\r\n\r\nclass WarpDoor extends Entity {\r\n\r\n}\r\n\r\nclass LavaSquare extends Entity {\r\n\r\n}\r\n\r\nclass Water extends Entity {\r\n\r\n}\r\n\r\nclass Bushes extends Entity {\r\n\r\n}\r\n\r\nclass Cloud extends Entity {\r\n\r\n}\r\n\r\nclass Construction extends Entity {\r\n\r\n}\r\n\r\nclass LightBulb extends Entity {\r\n\r\n}\r\n\r\nclass RampLeft extends Entity {\r\n\r\n}\r\n\r\nclass RampRight extends Entity {\r\n\r\n}\r\n\r\nclass RobotJoint extends Entity {\r\n\r\n}\r\n\r\nclass Sign extends Entity {\r\n\r\n}\r\n\r\nclass Spikes extends Entity {\r\n\r\n}\r\n\r\nclass Wheel extends Entity {\r\n\r\n}\r\n\r\nclass PipeCurve extends Entity {\r\n\r\n}\r\n\r\nclass PipeExtension extends Entity {\r\n\r\n}\r\n\r\nclass PipeSteam extends Entity {\r\n\r\n}\r\n\r\nclass PipeTop extends Entity {\r\n\r\n}\r\n\r\nclass PipeWater extends Entity {\r\n\r\n}\r\n\r\nclass TravelPipe extends Entity {\r\n\r\n}\r\n\r\nclass Treadmill extends Entity {\r\n\r\n}\r\n\r\nclass TreadmillRight extends Entity {\r\n\r\n}","import { Entity } from \"./Entity\";\r\n\r\nexport class Tronic extends Entity {\r\n    \r\n}","import { Entity } from \"./Entity\";\r\n\r\nexport class Monster extends Entity {\r\n    \r\n}","import { Entity } from \"./Entity\";\r\n\r\nexport class Item extends Entity {\r\n    \r\n}","import { Block } from \"./Block\";\r\nimport { Tronic } from \"./Tronic\";\r\nimport { Monster } from \"./Monster\";\r\nimport { Item } from \"./Item\";\r\n\r\nexport class Js2tronic {\r\n    readonly block: Block;\r\n    readonly tronic: Tronic;\r\n    readonly monster: Monster;\r\n    readonly item: Item;\r\n    constructor () {\r\n        this.block = new Block();\r\n        this.tronic = new Tronic();\r\n        this.monster = new Monster();\r\n        this.item = new Item();\r\n    }\r\n}","export enum Stuffable {\r\n    BLIP = \"Blip\",\r\n    BLIPBAT = \"BlipBat\",\r\n    BLIPGHOST = \"BlipGhost\",\r\n    BLIPSHADOW = \"BlipShadow\",\r\n    BOUNCINGBLIP = \"BouncingBlip\",\r\n    BRIGHTBLIP = \"BrightBlip\",\r\n    COINBLIP = \"CoinBlip\",\r\n    LAVABLIP = \"LavaBlip\",\r\n    NEKO = \"Neko\",\r\n    NEKOPILOT = \"NekoPilot\",\r\n    NEKOPOLICE = \"NekoPolice\",\r\n    NEKOPOLICECHIEF = \"NekoPoliceChief\",\r\n    PUGAXE = \"PugAxe\",\r\n    GAMEKID = \"GameKid\",\r\n    GAMEKIDBLUE = \"GameKidBlue\",\r\n    GAMEKIDRED = \"GameKidRed\",\r\n    GRUBBY = \"Grubby\",\r\n    PRAIRIEPIRANHA = \"PrairiePiranha\",\r\n    YELLOWMAN = \"YellowMan\",\r\n    PENGUIN = \"Penguin\",\r\n    MUMMY = \"Mummy\",\r\n    SKELETON = \"Skeleton\",\r\n    SKELETONKNIGHT = \"SkeletonKnight\",\r\n    SKELETONRED = \"SkeletonRed\",\r\n    FIRESNAIL = \"FireSnail\",\r\n    SNAIL = \"Snail\",\r\n    SNAILFLY = \"SnailFly\",\r\n    COIN = \"Coin\",\r\n    ONEUP = \"OneUp\",\r\n    STARSHARD = \"StarShard\",\r\n    DONUT = \"Donut\",\r\n    LIGHTBLOCK = \"LightBlock\",\r\n    ASTROICECREAM = \"AstroIcecream\",\r\n    BOMBERGET = \"BomberGet\",\r\n    BOOT = \"Boot\",\r\n    CHEESEBURGER = \"CheeseBurger\",\r\n    COOKIE = \"Cookie\",\r\n    FIREBALL = \"Fireball\",\r\n    GETHAPPY = \"GetHappy\",\r\n    HAT = \"Hat\",\r\n    SANICBURGER = \"SanicBurger\",\r\n    VIDEOGAME = \"VideoGame\",\r\n    WALKGUY = \"WalkGuy\",\r\n    WATERMELON = \"Watermelon\",\r\n    BOMB = \"Bomb\",\r\n    FIRESHELL = \"FireShell\",\r\n    SHELL = \"Shell\",\r\n    SKATEBOARD = \"Skateboard\"\r\n};","export enum CartridgeVariant {\r\n    FLOOR = \"cartridge_3\",\r\n    FILLER = \"cartridge_5\",\r\n    CEILING = \"cartridge_7\"\r\n}","export enum DesertVariant {\r\n    TOP_LEFT_CORNER = \"desert_0\",\r\n    TOP_PURPLE_BLUE = \"desert_1\",\r\n    TOP_RIGHT_CORNER = \"desert_2\",\r\n    FILLER = \"desert_3\",\r\n    TOP_GREEN = \"desert_4\",\r\n    TOP_ORANGE = \"desert_5\",\r\n    BOTTOM_LEFT_CORNER = \"desert_6\",\r\n    BOTTOM = \"desert_7\",\r\n    BOTTOM_RIGHT_CORNER = \"desert_8\"\r\n}","export enum DirtVariant {\r\n    TOP_LONG = \"ground_0\",\r\n    TOP_SHORT = \"ground_1\",\r\n    TOP_RIGHT_CORNER = \"ground_2\",\r\n    TOP_LEFT_CORNER = \"ground_3\",\r\n    FILLER = \"ground_4\",\r\n    FILLER_ONE_PATCH = \"ground_5\",\r\n    FILLER_TWO_PATCHES = \"ground_6\",\r\n    BOTTOM_LONG = \"ground_7\",\r\n    BOTTOM_SHORT = \"ground_8\"\r\n}","export enum MoonVariant {\r\n    TOP_FLAT = \"moon_0\",\r\n    TOP_BUMP = \"moon_1\",\r\n    TOP_RIGHT_CORNER = \"moon_2\",\r\n    TOP_LEFT_CORNER = \"moon_3\",\r\n    FILLER = \"moon_4\",\r\n    FILLER_SMALL_CRATER = \"moon_5\",\r\n    FILLER_BIG_CRATER = \"moon_6\",\r\n    BOTTOM_LONG = \"moon_7\",\r\n    BOTTOM_SHORT = \"moon_8\"\r\n}","export enum OneWayVariant {\r\n    TOP_LEFT_CORNER = \"platform_0\",\r\n    TOP_RIGHT_CORNER = \"platform_1\",\r\n    BOTTOM_RIGHT_CORNER = \"platform_2\",\r\n    BOTTOM_LEFT_CORNER = \"platform_3\",\r\n    TOP = \"platform_4\",\r\n    BOTTOM = \"platform_5\",\r\n    FILLER = \"platform_6\"\r\n}","export enum RobotVariant {\r\n    TOP_ACCENT = \"robotblock_0\",\r\n    TOP = \"robotblock_1\",\r\n    TOP_RIGHT_CORNER = \"robotblock_2\",\r\n    TOP_LEFT_CORNER = \"robotblock_3\",\r\n    FILLER = \"robotblock_4\",\r\n    FILLER_ACCENT = \"robotblock_5\",\r\n    BOTTOM_LEFT_CORNER = \"robotblock_6\",\r\n    BOTTOM = \"robotblock_7\",\r\n    BOTTOM_RIGHT_CORNER = \"robotblock_8\"\r\n}","export enum SaurusVariant {\r\n    TOP_LEFT_CORNER = \"Saurus_0\",\r\n    TOP = \"Saurus_1\",\r\n    TOP_RIGHT_CORNER = \"Saurus_2\",\r\n    FILLER_THREE_SCALES = \"Saurus_3\",\r\n    FILLER_ONE_SCALE = \"Saurus_4\",\r\n    FILLER_TWO_SCALES = \"Saurus_5\",\r\n    BOTTOM_LEFT_CORNER = \"Saurus_6\",\r\n    BOTTOM = \"Saurus_7\",\r\n    BOTTOM_RIGHT_CORNER = \"Saurus_8\"\r\n}","export enum ShipVariant {\r\n    BOTTOM_FIN = \"airship_0\",\r\n    BOTTOM = \"airship_1\",\r\n    BOTTOM_RIGHT_CORNER = \"airship_2\",\r\n    BOTTOM_LEFT_CORNER = \"airship_3\",\r\n    FILLER_SURFACE_NOTCH = \"airship_4\",\r\n    FILLER_RIGHT_NOTCH = \"airship_5\",\r\n    PORTHOLE = \"airship_6\",\r\n    FILLER_LEFT_TOP_RIGHT_NOTCHES_VARIANT_A = \"airship_7\",\r\n    FILLER_LEFT_TOP_RIGHT_NOTCHES_VARIANT_B = \"airship_8\"\r\n}","export enum RotationAngle {\r\n    UPRIGHT = 0,\r\n    CLOCKWISE = 90,\r\n    UPSIDE_DOWN = 180,\r\n    COUNTER_CLOCKWISE = 270\r\n};","import { Js2tronic } from \"./class/Js2tronic\";\r\n\r\nimport { Stuffable } from \"./enum/Stuffable\";\r\nimport { CartridgeVariant } from \"./enum/CartridgeVariant\";\r\nimport { DesertVariant } from \"./enum/DesertVariant\";\r\nimport { DirtVariant } from \"./enum/DirtVariant\";\r\nimport { MoonVariant } from \"./enum/MoonVariant\";\r\nimport { OneWayVariant } from \"./enum/OneWayVariant\";\r\nimport { RobotVariant } from \"./enum/RobotVariant\";\r\nimport { SaurusVariant } from \"./enum/SaurusVariant\";\r\nimport { ShipVariant } from \"./enum/ShipVariant\";\r\nimport { RotationAngle } from \"./enum/RotationAngle\";\r\n\r\n\r\nconst j2t: Js2tronic = new Js2tronic();\r\nconsole.log(j2t);\r\nlet test = j2t.block.BrickBlue();\r\nconsole.log(test);\r\ntest.pushToBackground().groupTo(331144).stuffWith(Stuffable.GRUBBY);\r\nconsole.log(test);\r\nlet cartrdige = j2t.block.Cartridge();\r\ncartrdige.spriteVariant(CartridgeVariant.FLOOR);\r\nconsole.log(cartrdige);\r\nlet desert = j2t.block.Desert();\r\ndesert.spriteVariant(DesertVariant.TOP_ORANGE);\r\nconsole.log(desert);\r\nlet dirt = j2t.block.Dirt();\r\ndirt.spriteVariant(DirtVariant.TOP_LONG);\r\nconsole.log(dirt);\r\nlet moon = j2t.block.Moon();\r\nmoon.spriteVariant(MoonVariant.TOP_BUMP);\r\nconsole.log(moon);\r\nlet oneWay = j2t.block.OneWay();\r\noneWay.spriteVariant(OneWayVariant.FILLER);\r\nconsole.log(oneWay);\r\nlet robot = j2t.block.Robot();\r\nrobot.spriteVariant(RobotVariant.BOTTOM_LEFT_CORNER);\r\nconsole.log(robot);\r\nlet saurus = j2t.block.Saurus();\r\nsaurus.spriteVariant(SaurusVariant.FILLER_THREE_SCALES);\r\nconsole.log(saurus);\r\nlet ship = j2t.block.Ship();\r\nship.spriteVariant(ShipVariant.FILLER_LEFT_TOP_RIGHT_NOTCHES_VARIANT_A);\r\nconsole.log(ship);\r\nlet fertbox = j2t.block.FertBox();\r\nfertbox.rotateTo(RotationAngle.UPSIDE_DOWN);\r\nconsole.log(fertbox);"]}